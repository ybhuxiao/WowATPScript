local IIIiillliIi1I1ilii1 = assert local Iiii1iIIIIIllllIll1 = select local iillII1ilIl1l11IiiI = tonumber local lilIiIiliII1iIli111 = unpack local Iil11i1iil1iI1lilI1 = pcall local lI1liii1iiIiI1lII1i = setfenv local I1Iill11iIIiIIl111I = setmetatable local lIl1Iiiiliii1i11lIlll = type local l1ill1iili1IlIiIiI1 = getfenv local lI1IllliiiliI111ili = tostring local l1i1i11IllIi1lilI1i = error local lIl1i1iiil1il1IiiillI = string.sub local illIi1llIIl111lII1I = string.byte local l1Ill1IiIII1iillIli = string.char local I1i1ii1liiliili1ll1 = string.rep local lIlIlll1Iiiil1l1iiiI1 = string.gsub local IIllIlli11II1Iiilll = string.match local II1IIIlI1IiillIIiII = #{6311} local IIlIIiIl1I1I1i1iilI = {} local llI11IIiiIl1iIi1iil = 1 local function lIliIIiiiIl111ilIili1(llil1i1illlIIlII1II, Iii1lii1iIl11lIil1i) local II11IlilillilIIIIii llil1i1illlIIlII1II = lIlIlll1Iiiil1l1iiiI1(lIl1i1iiil1il1IiiillI(llil1i1illlIIlII1II, 5), "..", function(IiiIlIlii1illiI11l1) if illIi1llIIl111lII1I(IiiIlIlii1illiI11l1, 2) == 71 then II11IlilillilIIIIii = iillII1ilIl1l11IiiI(lIl1i1iiil1il1IiiillI(IiiIlIlii1illiI11l1, 1, 1)) return "" else local i1Ili1lIllIll1llIII = l1Ill1IiIII1iillIli(iillII1ilIl1l11IiiI(IiiIlIlii1illiI11l1, 16)) if II11IlilillilIIIIii then local li1Iilli11ilIiIll1I = I1i1ii1liiliili1ll1(i1Ili1lIllIll1llIII, II11IlilillilIIIIii) II11IlilillilIIIIii = nil return li1Iilli11ilIiIll1I else return i1Ili1lIllIll1llIII end end end) local function IiI1IIiIIIl1l1ili1l() local l1i1illi1IIIliilIli = illIi1llIIl111lII1I(llil1i1illlIIlII1II, llI11IIiiIl1iIi1iil, llI11IIiiIl1iIi1iil) llI11IIiiIl1iIi1iil = llI11IIiiIl1iIi1iil + 1 return l1i1illi1IIIliilIli end local function iIi11I1lIIiilIilIll() local l1i1illi1IIIliilIli, i1Ili1lIllIll1llIII, li1Iilli11ilIiIll1I, lIlI11i1IiiIiIiiIIlI1 = illIi1llIIl111lII1I(llil1i1illlIIlII1II, llI11IIiiIl1iIi1iil, llI11IIiiIl1iIi1iil + 3) llI11IIiiIl1iIi1iil = llI11IIiiIl1iIi1iil + 4 return lIlI11i1IiiIiIiiIIlI1 * 16777216 + li1Iilli11ilIiIll1I * 65536 + i1Ili1lIllIll1llIII * 256 + l1i1illi1IIIliilIli end local function lill1lil11l1IlIIi1i(I1ilIi1Illl1lI1iIli, illiIl1ll111I1l1lll, lIli11l1I11iiiI11iiI1) if lIli11l1I11iiiI11iiI1 then local lIlIlIii11iiiII1111li, I1IIllli1I1111Ii1Ii = 0, 0 for Iiiii1liliiillIi1il = illiIl1ll111I1l1lll, lIli11l1I11iiiI11iiI1 do lIlIlIii11iiiII1111li = lIlIlIii11iiiII1111li + 2 ^ I1IIllli1I1111Ii1Ii * lill1lil11l1IlIIi1i(I1ilIi1Illl1lI1iIli, Iiiii1liliiillIi1il) I1IIllli1I1111Ii1Ii = I1IIllli1I1111Ii1Ii + 1 end return lIlIlIii11iiiII1111li else local lliIlI1IIlII1IIlII1 = 2 ^ (illiIl1ll111I1l1lll - 1) return lliIlI1IIlII1IIlII1 <= I1ilIi1Illl1lI1iIli % (lliIlI1IIlII1IIlII1 + lliIlI1IIlII1IIlII1) and 1 or 0 end end local function lIliiili1l1i11lIi1Il1() local l1i1illi1IIIliilIli, i1Ili1lIllIll1llIII = iIi11I1lIIiilIilIll(), iIi11I1lIIiilIilIll() if l1i1illi1IIIliilIli == 0 and i1Ili1lIllIll1llIII == 0 then return 0 end return (-2 * lill1lil11l1IlIIi1i(i1Ili1lIllIll1llIII, 32) + 1) * 2 ^ (lill1lil11l1IlIIi1i(i1Ili1lIllIll1llIII, 21, 31) - 1023) * ((lill1lil11l1IlIIi1i(i1Ili1lIllIll1llIII, 1, 20) * 4294967296 + l1i1illi1IIIliilIli) / 4503599627370496 + 1) end local function lIl1iIIliIIi1IilII1Ii(iIlilI1iilIIiIIIlIi) local lIliilII1lIIi11liIli1 = { illIi1llIIl111lII1I(llil1i1illlIIlII1II, llI11IIiiIl1iIi1iil, llI11IIiiIl1iIi1iil + 3) } llI11IIiiIl1iIi1iil = llI11IIiiIl1iIi1iil + 4 local liil1illilli1Iil1Ii = { nil, nil, nil, nil, nil, nil, nil, nil } for Iiiii1liliiillIi1il = 1, 8 do liil1illilli1Iil1Ii[Iiiii1liliiillIi1il] = lill1lil11l1IlIIi1i(iIlilI1iilIIiIIIlIi, Iiiii1liliiillIi1il) end local lIlil1IIilI1lIII11111 = "" for Iiiii1liliiillIi1il = 1, 4 do local lIlIlIii11iiiII1111li, I1IIllli1I1111Ii1Ii = 0, 0 for iIIIill1I1II111li1l = 1, 8 do local lIl1lllIilil11llIll1i = lill1lil11l1IlIIi1i(lIliilII1lIIi11liIli1[Iiiii1liliiillIi1il], iIIIill1I1II111li1l) if liil1illilli1Iil1Ii[iIIIill1I1II111li1l] == 1 then lIl1lllIilil11llIll1i = lIl1lllIilil11llIll1i == 1 and 0 or 1 end lIlIlIii11iiiII1111li = lIlIlIii11iiiII1111li + 2 ^ I1IIllli1I1111Ii1Ii * lIl1lllIilil11llIll1i I1IIllli1I1111Ii1Ii = I1IIllli1I1111Ii1Ii + 1 end lIlil1IIilI1lIII11111 = lIlil1IIilI1lIII11111 .. lIlil1IIilI1lIII11111.char(lIlIlIii11iiiII1111li) end local l1i1illi1IIIliilIli, i1Ili1lIllIll1llIII, li1Iilli11ilIiIll1I, lIlI11i1IiiIiIiiIIlI1 = illIi1llIIl111lII1I(lIlil1IIilI1lIII11111, 1, 4) return lIlI11i1IiiIiIiiIIlI1 * 16777216 + li1Iilli11ilIiIll1I * 65536 + i1Ili1lIllIll1llIII * 256 + l1i1illi1IIIliilIli end local function ii1iIlliillli11111l(iIlilI1iilIIiIIIlIi) local I1Il1llili1I1l1ilIi = iIi11I1lIIiilIilIll() llI11IIiiIl1iIi1iil = llI11IIiiIl1iIi1iil + I1Il1llili1I1l1ilIi local liil1illilli1Iil1Ii = { nil, nil, nil, nil, nil, nil, nil, nil } for Iiiii1liliiillIi1il = 1, 8 do liil1illilli1Iil1Ii[Iiiii1liliiillIi1il] = lill1lil11l1IlIIi1i(iIlilI1iilIIiIIIlIi, Iiiii1liliiillIi1il) end local lIlil1IIilI1lIII11111 = "" for Iiiii1liliiillIi1il = 1, I1Il1llili1I1l1ilIi do local lIlIlIii11iiiII1111li, I1IIllli1I1111Ii1Ii = 0, 0 for iIIIill1I1II111li1l = 1, 8 do local lIl1lllIilil11llIll1i = lill1lil11l1IlIIi1i(illIi1llIIl111lII1I(llil1i1illlIIlII1II, llI11IIiiIl1iIi1iil - I1Il1llili1I1l1ilIi + Iiiii1liliiillIi1il - 1), iIIIill1I1II111li1l) if liil1illilli1Iil1Ii[iIIIill1I1II111li1l] == 1 then lIl1lllIilil11llIll1i = lIl1lllIilil11llIll1i == 1 and 0 or 1 end lIlIlIii11iiiII1111li = lIlIlIii11iiiII1111li + 2 ^ I1IIllli1I1111Ii1Ii * lIl1lllIilil11llIll1i I1IIllli1I1111Ii1Ii = I1IIllli1I1111Ii1Ii + 1 end lIlil1IIilI1lIII11111 = lIlil1IIilI1lIII11111 .. lIlil1IIilI1lIII11111.char(lIlIlIii11iiiII1111li) end return lIlil1IIilI1lIII11111 end local iiI1i1lI11I1ilIilil = IiI1IIiIIIl1l1ili1l() local l1IIlll1I1I1iill11i = IiI1IIiIIIl1l1ili1l() local function lil1il11lIliliIilil() local II1lI1llIiilill1IIi = { [88289] = {}, [124470] = {}, [11506] = {}, [4042] = {} } II1lI1llIiilill1IIi[38472] = IiI1IIiIIIl1l1ili1l() IiI1IIiIIIl1l1ili1l() IiI1IIiIIIl1l1ili1l() II1lI1llIiilill1IIi[123468] = IiI1IIiIIIl1l1ili1l() local lIllilIilill1iii1I1li = iIi11I1lIIiilIilIll() - (#{ 2459, 1602, 2853, 5821, 1490, 6226, 3992, 173, 5553, 3484, 1304, 3889, 3410, 1322, 5785, 1965, 2465, 6274, 1735, 5194, 3780, 4820, 1792, 4624 } + 133735) for Iiiii1liliiillIi1il = II1IIIlI1IiillIIiII, lIllilIilill1iii1I1li do local II1iiIlliIlliiliiiI = {} local lIl1Iiiiliii1i11lIlll = IiI1IIiIIIl1l1ili1l() if lIl1Iiiiliii1i11lIlll == #{ 6225, 6785, 835, 5507, 3321, 4071, 1711, 5068, 1147, 6847, 1952, 1230, 5852, 1050, 3538, 6303, 5223, 5856, 4333, 5237, 6342, 5255, 1432 } + 200 then II1iiIlliIlliiliiiI[62778] = lIliiili1l1i11lIi1Il1() + lIliiili1l1i11lIi1Il1() end if lIl1Iiiiliii1i11lIlll == #{ 3474, 1393, 1039, 3800, 1318, 1214, 4821, 1254, 1391, 5949, 6536, 5612, 4096, 322, 2478, 6250, 31, 6115, 6215, 1807, 2414, 3618, 1738, 6397 } + 58 then II1iiIlliIlliiliiiI[62778] = iIi11I1lIIiilIilIll() end if lIl1Iiiiliii1i11lIlll == #{ 5072, 6432, 2029, 2576, 1780, 4365, 3841, 1440, 5458, 4911, 6819, 5895, 6894, 2085, 4288, 651, 2205, 4420, 6753, 4908, 145, 4577, 2971 } + 114 then II1iiIlliIlliiliiiI[62778] = lIliiili1l1i11lIi1Il1() + lIliiili1l1i11lIi1Il1() end if lIl1Iiiiliii1i11lIlll == #{ 1456, 5729, 2404, 5322, 503, 5277, 5707, 2969, 3588, 6495, 1048, 2157, 1148, 524, 2312, 3781, 3647, 5249, 3616, 4540 } + 200 then II1iiIlliIlliiliiiI[62778] = #{ 4014, 2965, 1682, 6769, 3685, 3544, 3211, 1450, 2226, 3686, 2989, 6420, 3743, 1339, 269, 361, 6848, 5413, 452, 5742, 2732, 5680 } + 65519 == #{ 2687, 70, 2908, 4924, 1127, 2345, 4722, 4961, 2721, 1599, 1021, 3723, 483, 1072, 3171, 4876, 5116, 5250, 6959, 5158, 2631 } + 46588 end if lIl1Iiiiliii1i11lIlll == #{ 2844, 2313, 2618, 6273, 5853, 4203, 491, 2355, 5736, 459, 6298, 247, 5402, 1512, 2438, 766, 5875, 3910, 6666, 6524, 6809, 1426, 6307, 6797 } + 212 then II1iiIlliIlliiliiiI[62778] = IiI1IIiIIIl1l1ili1l() end if lIl1Iiiiliii1i11lIlll == #{ 4267, 5339, 3121, 3440, 6882, 550, 5827, 6250, 3592, 1658, 1781, 1242, 3249, 1335, 3255, 474, 275, 124, 3210, 2852 } + 194 then II1iiIlliIlliiliiiI[62778] = lIliiili1l1i11lIi1Il1() + lIliiili1l1i11lIi1Il1() end if lIl1Iiiiliii1i11lIlll == #{ 2617, 3817, 5658 } then II1iiIlliIlliiliiiI[62778] = #{ 4841, 4701, 6067, 3670, 2408, 5966, 6963, 1376, 2723, 2116, 5395, 3083, 4336, 6530, 1532, 5618, 1834, 2580, 3434, 599 } + 128633 == #{ 4841, 4701, 6067, 3670, 2408, 5966, 6963, 1376, 2723, 2116, 5395, 3083, 4336, 6530, 1532, 5618, 1834, 2580, 3434, 599 } + 128633 end if lIl1Iiiiliii1i11lIlll == #{ 1106, 1949, 5239, 2830, 6799, 6515, 4361, 4873, 6411, 5402, 5264, 6253, 752, 205, 5586, 5792, 3871, 6326, 797, 4931 } + 57 then II1iiIlliIlliiliiiI[62778] = ii1iIlliillli11111l(iiI1i1lI11I1ilIilil) end if lIl1Iiiiliii1i11lIlll == #{ 2340, 6688, 5377, 241, 1603, 1730, 343, 2687, 1049, 3548, 5527, 3321, 2499, 6465, 3716, 3125, 239, 795, 66, 5280, 3934 } + 198 then II1iiIlliIlliiliiiI[62778] = lIliiili1l1i11lIi1Il1() end II1lI1llIiilill1IIi[11506][Iiiii1liliiillIi1il - II1IIIlI1IiillIIiII] = II1iiIlliIlliiliiiI end IiI1IIiIIIl1l1ili1l() iIi11I1lIIiilIilIll() iIi11I1lIIiilIilIll() local lIllilIilill1iii1I1li = iIi11I1lIIiilIilIll() - (#{ 4926, 1051, 1297, 1636, 3252, 1689, 680, 1890, 3654, 5268, 4308, 4534, 6803, 1090, 3816, 2120, 932, 2548, 4913, 869, 6110 } + 133723) for Iiiii1liliiillIi1il = II1IIIlI1IiillIIiII, lIllilIilill1iii1I1li do local IIlI11I1ilI1II1llIi = {} local lIl1I1IlilI1lllIlIIi1 = lIl1iIIliIIi1IilII1Ii(l1IIlll1I1I1iill11i) IIlI11I1ilI1II1llIi[117975] = lill1lil11l1IlIIi1i(lIl1I1IlilI1lllIlIIi1, #{ 3251, 4254, 2299, 4472, 1424, 2383, 3824, 2373, 1094, 6731, 5154, 1666, 1525, 3006, 4618, 5127, 1428, 389, 2050, 4286, 5384 } + 6, #{ 4172, 5357, 345, 425, 3146, 2729, 1326, 55, 3908, 33, 5501, 6766, 4922, 4886, 5645, 4352, 3855, 4293, 1024, 938, 3922 } + 11) IIlI11I1ilI1II1llIi[126913] = lill1lil11l1IlIIi1i(lIl1I1IlilI1lllIlIIi1, #{6364}, #{ 110, 1779, 370, 2141, 4689, 3844, 3893, 3772, 6430, 2522, 4238, 2298, 3031, 5287, 864, 2907, 1781, 4681 }) IIlI11I1ilI1II1llIi[542] = lill1lil11l1IlIIi1i(lIl1I1IlilI1lllIlIIi1, #{1226}, #{ 4900, 5753, 4395, 141, 3004, 6196, 5484, 172, 6701 }) IIlI11I1ilI1II1llIi[80938] = lill1lil11l1IlIIi1i(lIl1I1IlilI1lllIlIIi1, #{ 5649, 3711, 2965, 2039, 3592, 6271, 4455, 5175, 3989, 3512 }, #{ 724, 2679, 6835, 6941, 2464, 3155, 6672, 3027, 4018, 3808, 3335, 6812, 2338, 769, 2609, 6279, 5076, 3111 }) IIlI11I1ilI1II1llIi[69029] = lill1lil11l1IlIIi1i(lIl1I1IlilI1lllIlIIi1, #{ 523, 3035, 3337, 1574, 3113, 5355, 1682, 4423, 1240, 3683, 5, 6822, 6958, 4573, 2066, 6165, 1413, 5216, 4653 }, #{ 4646, 5647, 5420, 5518, 1611, 3392, 5744, 6054, 6570, 985, 669, 5467, 239, 263, 235, 6797, 2696, 2364, 466, 5967, 1970, 4126 } + 4) II1lI1llIiilill1IIi[124470][Iiiii1liliiillIi1il] = IIlI11I1ilI1II1llIi end iIi11I1lIIiilIilIll() IiI1IIiIIIl1l1ili1l() iIi11I1lIIiilIilIll() iIi11I1lIIiilIilIll() IiI1IIiIIIl1l1ili1l() II1lI1llIiilill1IIi[105647] = IiI1IIiIIIl1l1ili1l() local lIllilIilill1iii1I1li = iIi11I1lIIiilIilIll() for Iiiii1liliiillIi1il = II1IIIlI1IiillIIiII, lIllilIilill1iii1I1li do II1lI1llIiilill1IIi[4042][Iiiii1liliiillIi1il - II1IIIlI1IiillIIiII] = lil1il11lIliliIilil() end local lIllilIilill1iii1I1li = iIi11I1lIIiilIilIll() for Iiiii1liliiillIi1il = II1IIIlI1IiillIIiII, lIllilIilill1iii1I1li do II1lI1llIiilill1IIi[88289][Iiiii1liliiillIi1il] = iIi11I1lIIiilIilIll() end return II1lI1llIiilill1IIi end local function iIIlI11li1111iIIiiI(II1lI1llIiilill1IIi, Iii1lii1iIl11lIil1i, Il1I1liI1I111lllllI) local iIII1liiIi1Ii1iIlIl, lIliiliiiilliIi11lil1 = 30, 24 local iI1lIiiiIill1l1i1ii = II1lI1llIiilill1IIi[124470] local IlliI1l1il1il1liIII = I1Iill11iIIiIIl111I({}, { __index = function(Iiiiil1I1ill1l1li1l, iIIi1ll1IiiIIlili1i) local lIlil1IIilI1lIII11111 = II1lI1llIiilill1IIi[11506][iIIi1ll1IiiIIlili1i] if lIl1i1iiil1il1IiiillI(lIl1Iiiiliii1i11lIlll(lIlil1IIilI1lIII11111[62778]), 1, 1) == "s" then return { [62778] = lIl1i1iiil1il1IiiillI(lIlil1IIilI1lIII11111[62778], 2) } end return lIlil1IIilI1lIII11111 end }) local Ii1li11II1IlIiliili = 38472 local I1111illil11iiliill = II1lI1llIiilill1IIi[4042] local illl1II1i1lI11iIIlI = 62778 local I1IliiIl1IIli1ili1l = II1lI1llIiilill1IIi[123468] local lIlI1i1illIIl1lI1iIII = 117975 local llliIi1II1lII11lIi1 = II1lI1llIiilill1IIi[88289] local liIlIli1i11il1iiIIl = 542 local function lllliIlIl1llllIlil1(...) local Il1i11lI1IlIl111ili = 0 local l1ilI1i1IIl1Il11I11 = { lilIiIiliII1iIli111({}, 1, II1lI1llIiilill1IIi[105647]) } local ilI11I1li1iliilllii = 1 local l11I1Iilli11IlIIIii = {} local iIIIllll11liliiI11l = {} local i1IlI1l1I1Illilllii = 1 local Iii1lii1iIl11lIil1i = l1ill1iili1IlIiIiI1() local lIl1lil1IiIlIIiilIl1I = { ... } local lIi1iiiIiII1111lill = {} local IliI11I111iI1li1IIi = #lIl1lil1IiIlIIiilIl1I - 1 for Iiiii1liliiillIi1il = 0, IliI11I111iI1li1IIi do if I1IliiIl1IIli1ili1l >= Iiiii1liliiillIi1il + 1 then l1ilI1i1IIl1Il11I11[Iiiii1liliiillIi1il] = lIl1lil1IiIlIIiilIl1I[Iiiii1liliiillIi1il + 1] end lIi1iiiIiII1111lill[Iiiii1liliiillIi1il] = lIl1lil1IiIlIIiilIl1I[Iiiii1liliiillIi1il + 1] end local function I1I1i1lIIIlIi1i11iI(...) local li1Iilli11ilIiIll1I = Iiii1iIIIIIllllIll1("#", ...) local Iiiiil1I1ill1l1li1l = { ... } return li1Iilli11ilIiIll1I, Iiiiil1I1ill1l1li1l end local lli1IliI1liI1iiIlil = #{ 2841, 3371, 6627, 1156, 6539, 1099, 2428, 1475, 5260, 6777, 5975, 2352, 5283, 4955, 6512, 6526, 617, 1479, 1961, 673, 193, 6469 } + 131049 local lil1iIIIi1iiil1IllI local lIl1IIil1iIIl11Ii1l1i = { function(iiIi1IllIIiiii11IIl, iii11Ill1l11liIllii, lIlIliiiiiI1I11l1lI1I) local lIl1Il1iil111l1lIiiIi = iiIi1IllIIiiii11IIl[126913] local lIllllII1iIiIlIiIiI1l = iiIi1IllIIiiii11IIl[126913] - lli1IliI1liI1iiIlil local lIliilii1i1lIIl1iIIiI = iiIi1IllIIiiii11IIl[69029] local I11iiIIiIl111Ili1lI = iiIi1IllIIiiii11IIl[542] local lI1llI11I1ll11li1i1 = iiIi1IllIIiiii11IIl[80938] if I11iiIIiIl111Ili1lI > 255 then I11iiIIiIl111Ili1lI = IlliI1l1il1il1liIII[I11iiIIiIl111Ili1lI - 256][illl1II1i1lI11iIIlI] else I11iiIIiIl111Ili1lI = l1ilI1i1IIl1Il11I11[I11iiIIiIl111Ili1lI] end if lI1llI11I1ll11li1i1 > 255 then lI1llI11I1ll11li1i1 = IlliI1l1il1il1liIII[lI1llI11I1ll11li1i1 - 256][illl1II1i1lI11iIIlI] else lI1llI11I1ll11li1i1 = l1ilI1i1IIl1Il11I11[lI1llI11I1ll11li1i1] end if I11iiIIiIl111Ili1lI == lI1llI11I1ll11li1i1 ~= (lIliilii1i1lIIl1iIIiI ~= 0) then ilI11I1li1iliilllii = ilI11I1li1iliilllii + 1 end end, function(iiIi1IllIIiiii11IIl, iii11Ill1l11liIllii, lIlIliiiiiI1I11l1lI1I) local lI1llI11I1ll11li1i1 = iiIi1IllIIiiii11IIl[80938] local I11iiIIiIl111Ili1lI = iiIi1IllIIiiii11IIl[542] local lIllllII1iIiIlIiIiI1l = iiIi1IllIIiiii11IIl[126913] - lli1IliI1liI1iiIlil local lIliilii1i1lIIl1iIIiI = iiIi1IllIIiiii11IIl[69029] local lIl1Il1iil111l1lIiiIi = iiIi1IllIIiiii11IIl[126913] if lI1llI11I1ll11li1i1 == 87 then return lil1iIIIi1iiil1IllI[18]({ [69029] = (lIliilii1i1lIIl1iIIiI - 118) % 256, [542] = (I11iiIIiIl111Ili1lI - 118) % 256, [126913] = 0 }) end if lI1llI11I1ll11li1i1 == 30 then return lil1iIIIi1iiil1IllI[33]({ [69029] = (lIliilii1i1lIIl1iIIiI - 0) % 256, [80938] = (I11iiIIiIl111Ili1lI - 0) % 256, [126913] = 0 }) end if lI1llI11I1ll11li1i1 == 182 then return lil1iIIIi1iiil1IllI[28]({ [69029] = (lIliilii1i1lIIl1iIIiI - 128) % 256, [542] = (I11iiIIiIl111Ili1lI - 128) % 256, [126913] = 0 }) end l1ilI1i1IIl1Il11I11[lIliilii1i1lIIl1iIIiI] = #l1ilI1i1IIl1Il11I11[I11iiIIiIl111Ili1lI] end, function(iiIi1IllIIiiii11IIl, iii11Ill1l11liIllii, lIlIliiiiiI1I11l1lI1I) local lIl1Il1iil111l1lIiiIi = iiIi1IllIIiiii11IIl[126913] local lI1llI11I1ll11li1i1 = iiIi1IllIIiiii11IIl[80938] local lIliilii1i1lIIl1iIIiI = iiIi1IllIIiiii11IIl[69029] local I11iiIIiIl111Ili1lI = iiIi1IllIIiiii11IIl[542] local lIllllII1iIiIlIiIiI1l = iiIi1IllIIiiii11IIl[126913] - lli1IliI1liI1iiIlil if lI1llI11I1ll11li1i1 == 126 then return lil1iIIIi1iiil1IllI[14]({ [69029] = (lIliilii1i1lIIl1iIIiI - 204) % 256, [542] = (I11iiIIiIl111Ili1lI - 204) % 256, [126913] = 0 }) end if lI1llI11I1ll11li1i1 == 36 then return lil1iIIIi1iiil1IllI[11]({ [69029] = (lIliilii1i1lIIl1iIIiI - 202) % 256, [542] = (I11iiIIiIl111Ili1lI - 202) % 256, [126913] = 0 }) end for Iiiii1liliiillIi1il = lIliilii1i1lIIl1iIIiI, #l1ilI1i1IIl1Il11I11 do local lI11iiiIi11liI1lIIi = i1IlI1l1I1Illilllii for iilIIIil1iii111IIii, l1iiil1Ii1iiIIIllIl in next, l11I1Iilli11IlIIIii, nil do for iIlilI1iilIIiIIIlIi, iilIIlIIi1iIilIi1ii in next, l1iiil1Ii1iiIIIllIl, nil do if l1ilI1i1IIl1Il11I11 == iilIIlIIi1iIilIi1ii[1] and iilIIlIIi1iIilIi1ii[2] == Iiiii1liliiillIi1il then if not iIIIllll11liliiI11l[lI11iiiIi11liI1lIIi] then iIIIllll11liliiI11l[lI11iiiIi11liI1lIIi] = l1ilI1i1IIl1Il11I11[Iiiii1liliiillIi1il] i1IlI1l1I1Illilllii = i1IlI1l1I1Illilllii + 1 end l1iiil1Ii1iiIIIllIl[iIlilI1iilIIiIIIlIi] = {iIIIllll11liliiI11l, lI11iiiIi11liI1lIIi} end end end end end, nil, function(iiIi1IllIIiiii11IIl, iii11Ill1l11liIllii, lIlIliiiiiI1I11l1lI1I, l1IiiIiliII1iili111) local lIllllII1iIiIlIiIiI1l = iiIi1IllIIiiii11IIl[126913] - lli1IliI1liI1iiIlil local lI1llI11I1ll11li1i1 = iiIi1IllIIiiii11IIl[80938] local lIl1Il1iil111l1lIiiIi = iiIi1IllIIiiii11IIl[126913] local I11iiIIiIl111Ili1lI = iiIi1IllIIiiii11IIl[542] local lIliilii1i1lIIl1iIIiI = iiIi1IllIIiiii11IIl[69029] local iIlilI1iilIIiIIIlIi if lIl1Il1iil111l1lIiiIi == 100000 then iIlilI1iilIIiIIIlIi = l1ilI1i1IIl1Il11I11[251] else iIlilI1iilIIiIIIlIi = IlliI1l1il1il1liIII[lIl1Il1iil111l1lIiiIi][illl1II1i1lI11iIIlI] end l1ilI1i1IIl1Il11I11[lIliilii1i1lIIl1iIIiI] = Iii1lii1iIl11lIil1i[iIlilI1iilIIiIIIlIi] end, function(iiIi1IllIIiiii11IIl, iii11Ill1l11liIllii, lIlIliiiiiI1I11l1lI1I) local lIllllII1iIiIlIiIiI1l = iiIi1IllIIiiii11IIl[126913] - lli1IliI1liI1iiIlil local I11iiIIiIl111Ili1lI = iiIi1IllIIiiii11IIl[542] local lIl1Il1iil111l1lIiiIi = iiIi1IllIIiiii11IIl[126913] local lIliilii1i1lIIl1iIIiI = iiIi1IllIIiiii11IIl[69029] local lI1llI11I1ll11li1i1 = iiIi1IllIIiiii11IIl[80938] if I11iiIIiIl111Ili1lI > 255 then I11iiIIiIl111Ili1lI = IlliI1l1il1il1liIII[I11iiIIiIl111Ili1lI - 256][illl1II1i1lI11iIIlI] else I11iiIIiIl111Ili1lI = l1ilI1i1IIl1Il11I11[I11iiIIiIl111Ili1lI] end if lI1llI11I1ll11li1i1 > 255 then lI1llI11I1ll11li1i1 = IlliI1l1il1il1liIII[lI1llI11I1ll11li1i1 - 256][illl1II1i1lI11iIIlI] else lI1llI11I1ll11li1i1 = l1ilI1i1IIl1Il11I11[lI1llI11I1ll11li1i1] end if I11iiIIiIl111Ili1lI <= lI1llI11I1ll11li1i1 ~= (lIliilii1i1lIIl1iIIiI ~= 0) then ilI11I1li1iliilllii = ilI11I1li1iliilllii + 1 end end, function(iiIi1IllIIiiii11IIl, iii11Ill1l11liIllii, lIlIliiiiiI1I11l1lI1I) local lIl1Il1iil111l1lIiiIi = iiIi1IllIIiiii11IIl[126913] local lI1llI11I1ll11li1i1 = iiIi1IllIIiiii11IIl[80938] local I11iiIIiIl111Ili1lI = iiIi1IllIIiiii11IIl[542] local lIliilii1i1lIIl1iIIiI = iiIi1IllIIiiii11IIl[69029] local lIllllII1iIiIlIiIiI1l = iiIi1IllIIiiii11IIl[126913] - lli1IliI1liI1iiIlil l1ilI1i1IIl1Il11I11[lIliilii1i1lIIl1iIIiI] = IIIiillliIi1I1ilii1(iillII1ilIl1l11IiiI(l1ilI1i1IIl1Il11I11[lIliilii1i1lIIl1iIIiI]), "`for` initial value must be a number") l1ilI1i1IIl1Il11I11[lIliilii1i1lIIl1iIIiI + 1] = IIIiillliIi1I1ilii1(iillII1ilIl1l11IiiI(l1ilI1i1IIl1Il11I11[lIliilii1i1lIIl1iIIiI + 1]), "`for` limit value must be a number") l1ilI1i1IIl1Il11I11[lIliilii1i1lIIl1iIIiI + 2] = IIIiillliIi1I1ilii1(iillII1ilIl1l11IiiI(l1ilI1i1IIl1Il11I11[lIliilii1i1lIIl1iIIiI + 2]), "`for` step value must be a number") l1ilI1i1IIl1Il11I11[lIliilii1i1lIIl1iIIiI] = l1ilI1i1IIl1Il11I11[lIliilii1i1lIIl1iIIiI] - l1ilI1i1IIl1Il11I11[lIliilii1i1lIIl1iIIiI + 2] ilI11I1li1iliilllii = ilI11I1li1iliilllii + lIllllII1iIiIlIiIiI1l end, nil, nil, function(iiIi1IllIIiiii11IIl, iii11Ill1l11liIllii) local lIl1Il1iil111l1lIiiIi = iiIi1IllIIiiii11IIl[126913] local I11iiIIiIl111Ili1lI = iiIi1IllIIiiii11IIl[542] local lI1llI11I1ll11li1i1 = iiIi1IllIIiiii11IIl[80938] local lIliilii1i1lIIl1iIIiI = iiIi1IllIIiiii11IIl[69029] local lIllllII1iIiIlIiIiI1l = iiIi1IllIIiiii11IIl[126913] - lli1IliI1liI1iiIlil if I11iiIIiIl111Ili1lI > 255 then I11iiIIiIl111Ili1lI = IlliI1l1il1il1liIII[I11iiIIiIl111Ili1lI - 256][illl1II1i1lI11iIIlI] else I11iiIIiIl111Ili1lI = l1ilI1i1IIl1Il11I11[I11iiIIiIl111Ili1lI] end if lI1llI11I1ll11li1i1 > 255 then lI1llI11I1ll11li1i1 = IlliI1l1il1il1liIII[lI1llI11I1ll11li1i1 - 256][illl1II1i1lI11iIIlI] else lI1llI11I1ll11li1i1 = l1ilI1i1IIl1Il11I11[lI1llI11I1ll11li1i1] end l1ilI1i1IIl1Il11I11[lIliilii1i1lIIl1iIIiI] = I11iiIIiIl111Ili1lI ^ lI1llI11I1ll11li1i1 end, function(iiIi1IllIIiiii11IIl, iii11Ill1l11liIllii, lIlIliiiiiI1I11l1lI1I, l1IiiIiliII1iili111) local lI1llI11I1ll11li1i1 = iiIi1IllIIiiii11IIl[80938] local lIliilii1i1lIIl1iIIiI = iiIi1IllIIiiii11IIl[69029] local I11iiIIiIl111Ili1lI = iiIi1IllIIiiii11IIl[542] local lIl1Il1iil111l1lIiiIi = iiIi1IllIIiiii11IIl[126913] local lIllllII1iIiIlIiIiI1l = iiIi1IllIIiiii11IIl[126913] - lli1IliI1liI1iiIlil l1ilI1i1IIl1Il11I11[lIliilii1i1lIIl1iIIiI] = { lilIiIiliII1iIli111(IIlIIiIl1I1I1i1iilI, 1, I11iiIIiIl111Ili1lI == 0 and 895 or I11iiIIiIl111Ili1lI) } end, function(iiIi1IllIIiiii11IIl, iii11Ill1l11liIllii, lIlIliiiiiI1I11l1lI1I) local I11iiIIiIl111Ili1lI = iiIi1IllIIiiii11IIl[542] local lIllllII1iIiIlIiIiI1l = iiIi1IllIIiiii11IIl[126913] - lli1IliI1liI1iiIlil local lIl1Il1iil111l1lIiiIi = iiIi1IllIIiiii11IIl[126913] local lIliilii1i1lIIl1iIIiI = iiIi1IllIIiiii11IIl[69029] local lI1llI11I1ll11li1i1 = iiIi1IllIIiiii11IIl[80938] if lI1llI11I1ll11li1i1 == 32 then return lil1iIIIi1iiil1IllI[19]({ [69029] = (lIliilii1i1lIIl1iIIiI - 135) % 256, [542] = (I11iiIIiIl111Ili1lI - 135) % 256, [126913] = 0 }) end if I11iiIIiIl111Ili1lI == 1 then return true end local Ii11Ill1IlI1Il11I1i = lIliilii1i1lIIl1iIIiI + I11iiIIiIl111Ili1lI - 2 if I11iiIIiIl111Ili1lI == 0 then Ii11Ill1IlI1Il11I1i = Il1i11lI1IlIl111ili end return true, lIliilii1i1lIIl1iIIiI, Ii11Ill1IlI1Il11I1i end, nil, nil, function(iiIi1IllIIiiii11IIl, iii11Ill1l11liIllii) local lI1llI11I1ll11li1i1 = iiIi1IllIIiiii11IIl[80938] local lIl1Il1iil111l1lIiiIi = iiIi1IllIIiiii11IIl[126913] local I11iiIIiIl111Ili1lI = iiIi1IllIIiiii11IIl[542] local lIliilii1i1lIIl1iIIiI = iiIi1IllIIiiii11IIl[69029] local lIllllII1iIiIlIiIiI1l = iiIi1IllIIiiii11IIl[126913] - lli1IliI1liI1iiIlil if I11iiIIiIl111Ili1lI > 255 then I11iiIIiIl111Ili1lI = IlliI1l1il1il1liIII[I11iiIIiIl111Ili1lI - 256][illl1II1i1lI11iIIlI] else I11iiIIiIl111Ili1lI = l1ilI1i1IIl1Il11I11[I11iiIIiIl111Ili1lI] end if lI1llI11I1ll11li1i1 > 255 then lI1llI11I1ll11li1i1 = IlliI1l1il1il1liIII[lI1llI11I1ll11li1i1 - 256][illl1II1i1lI11iIIlI] else lI1llI11I1ll11li1i1 = l1ilI1i1IIl1Il11I11[lI1llI11I1ll11li1i1] end l1ilI1i1IIl1Il11I11[lIliilii1i1lIIl1iIIiI][I11iiIIiIl111Ili1lI] = lI1llI11I1ll11li1i1 end, function(iiIi1IllIIiiii11IIl, iii11Ill1l11liIllii) local lI1llI11I1ll11li1i1 = iiIi1IllIIiiii11IIl[80938] local lIl1Il1iil111l1lIiiIi = iiIi1IllIIiiii11IIl[126913] local I11iiIIiIl111Ili1lI = iiIi1IllIIiiii11IIl[542] local lIllllII1iIiIlIiIiI1l = iiIi1IllIIiiii11IIl[126913] - lli1IliI1liI1iiIlil local lIliilii1i1lIIl1iIIiI = iiIi1IllIIiiii11IIl[69029] if lI1llI11I1ll11li1i1 == 237 then return lil1iIIIi1iiil1IllI[31]({ [69029] = (lIliilii1i1lIIl1iIIiI - 118) % 256, [542] = (I11iiIIiIl111Ili1lI - 118) % 256, [126913] = 0 }) end if lI1llI11I1ll11li1i1 == 186 then return lil1iIIIi1iiil1IllI[30]({ [69029] = (lIliilii1i1lIIl1iIIiI - 213) % 256, [80938] = (I11iiIIiIl111Ili1lI - 213) % 256, [126913] = 0 }) end l1ilI1i1IIl1Il11I11[lIliilii1i1lIIl1iIIiI] = not l1ilI1i1IIl1Il11I11[I11iiIIiIl111Ili1lI] end, function(iiIi1IllIIiiii11IIl, iii11Ill1l11liIllii, lIlIliiiiiI1I11l1lI1I, l1IiiIiliII1iili111, lIl1IlI1il1IilIllIill) local lIllllII1iIiIlIiIiI1l = iiIi1IllIIiiii11IIl[126913] - lli1IliI1liI1iiIlil local I11iiIIiIl111Ili1lI = iiIi1IllIIiiii11IIl[542] local lI1llI11I1ll11li1i1 = iiIi1IllIIiiii11IIl[80938] local lIliilii1i1lIIl1iIIiI = iiIi1IllIIiiii11IIl[69029] local lIl1Il1iil111l1lIiiIi = iiIi1IllIIiiii11IIl[126913] l1ilI1i1IIl1Il11I11[lIliilii1i1lIIl1iIIiI] = l1ilI1i1IIl1Il11I11[I11iiIIiIl111Ili1lI] end, function(iiIi1IllIIiiii11IIl, iii11Ill1l11liIllii, lIlIliiiiiI1I11l1lI1I, l1IiiIiliII1iili111) local lI1llI11I1ll11li1i1 = iiIi1IllIIiiii11IIl[80938] local lIl1Il1iil111l1lIiiIi = iiIi1IllIIiiii11IIl[126913] local I11iiIIiIl111Ili1lI = iiIi1IllIIiiii11IIl[542] local lIliilii1i1lIIl1iIIiI = iiIi1IllIIiiii11IIl[69029] local lIllllII1iIiIlIiIiI1l = iiIi1IllIIiiii11IIl[126913] - lli1IliI1liI1iiIlil if I11iiIIiIl111Ili1lI > 255 then I11iiIIiIl111Ili1lI = IlliI1l1il1il1liIII[I11iiIIiIl111Ili1lI - 256][illl1II1i1lI11iIIlI] else I11iiIIiIl111Ili1lI = l1ilI1i1IIl1Il11I11[I11iiIIiIl111Ili1lI] end if lI1llI11I1ll11li1i1 > 255 then lI1llI11I1ll11li1i1 = IlliI1l1il1il1liIII[lI1llI11I1ll11li1i1 - 256][illl1II1i1lI11iIIlI] else lI1llI11I1ll11li1i1 = l1ilI1i1IIl1Il11I11[lI1llI11I1ll11li1i1] end l1ilI1i1IIl1Il11I11[lIliilii1i1lIIl1iIIiI] = I11iiIIiIl111Ili1lI % lI1llI11I1ll11li1i1 end, nil, function(iiIi1IllIIiiii11IIl) local lIl1Il1iil111l1lIiiIi = iiIi1IllIIiiii11IIl[126913] local lI1llI11I1ll11li1i1 = iiIi1IllIIiiii11IIl[80938] local lIllllII1iIiIlIiIiI1l = iiIi1IllIIiiii11IIl[126913] - lli1IliI1liI1iiIlil local lIliilii1i1lIIl1iIIiI = iiIi1IllIIiiii11IIl[69029] local I11iiIIiIl111Ili1lI = iiIi1IllIIiiii11IIl[542] if not not l1ilI1i1IIl1Il11I11[lIliilii1i1lIIl1iIIiI] == (lI1llI11I1ll11li1i1 == 0) then ilI11I1li1iliilllii = ilI11I1li1iliilllii + 1 end end, nil, nil, function(iiIi1IllIIiiii11IIl, iii11Ill1l11liIllii, lIlIliiiiiI1I11l1lI1I, l1IiiIiliII1iili111) local lIllllII1iIiIlIiIiI1l = iiIi1IllIIiiii11IIl[126913] - lli1IliI1liI1iiIlil local I11iiIIiIl111Ili1lI = iiIi1IllIIiiii11IIl[542] local lI1llI11I1ll11li1i1 = iiIi1IllIIiiii11IIl[80938] local lIl1Il1iil111l1lIiiIi = iiIi1IllIIiiii11IIl[126913] local lIliilii1i1lIIl1iIIiI = iiIi1IllIIiiii11IIl[69029] local lil1Ii1lI11ilIiiil1, Ii11Ill1IlI1Il11I1i if I11iiIIiIl111Ili1lI ~= 1 then if I11iiIIiIl111Ili1lI ~= 0 then Ii11Ill1IlI1Il11I1i = lIliilii1i1lIIl1iIIiI + I11iiIIiIl111Ili1lI - 1 else Ii11Ill1IlI1Il11I1i = Il1i11lI1IlIl111ili end Ii11Ill1IlI1Il11I1i, lil1Ii1lI11ilIiiil1 = I1I1i1lIIIlIi1i11iI(l1ilI1i1IIl1Il11I11[lIliilii1i1lIIl1iIIiI](lilIiIiliII1iIli111(l1ilI1i1IIl1Il11I11, lIliilii1i1lIIl1iIIiI + 1, Ii11Ill1IlI1Il11I1i))) else Ii11Ill1IlI1Il11I1i, lil1Ii1lI11ilIiiil1 = I1I1i1lIIIlIi1i11iI(l1ilI1i1IIl1Il11I11[lIliilii1i1lIIl1iIIiI]()) end l1ilI1i1IIl1Il11I11 = lil1Ii1lI11ilIiiil1 return true, 1, Ii11Ill1IlI1Il11I1i end, nil, nil, nil, function(iiIi1IllIIiiii11IIl, iii11Ill1l11liIllii, lIlIliiiiiI1I11l1lI1I) local lI1llI11I1ll11li1i1 = iiIi1IllIIiiii11IIl[80938] local lIl1Il1iil111l1lIiiIi = iiIi1IllIIiiii11IIl[126913] local lIllllII1iIiIlIiIiI1l = iiIi1IllIIiiii11IIl[126913] - lli1IliI1liI1iiIlil local lIliilii1i1lIIl1iIIiI = iiIi1IllIIiiii11IIl[69029] local I11iiIIiIl111Ili1lI = iiIi1IllIIiiii11IIl[542] local lII1IiIIIl1iI1Iiili = I11iiIIiIl111Ili1lI > 0 and I11iiIIiIl111Ili1lI - 1 or IliI11I111iI1li1IIi - I1IliiIl1IIli1ili1l for Iiiii1liliiillIi1il = lIliilii1i1lIIl1iIIiI, lIliilii1i1lIIl1iIIiI + lII1IiIIIl1iI1Iiili do if Iiiii1liliiillIi1il - lIliilii1i1lIIl1iIIiI <= IliI11I111iI1li1IIi then l1ilI1i1IIl1Il11I11[Iiiii1liliiillIi1il] = lIi1iiiIiII1111lill[I1IliiIl1IIli1ili1l + (Iiiii1liliiillIi1il - lIliilii1i1lIIl1iIIiI)] else l1ilI1i1IIl1Il11I11[Iiiii1liliiillIi1il] = nil end end Il1i11lI1IlIl111ili = lIliilii1i1lIIl1iIIiI + lII1IiIIIl1iI1Iiili end, nil, nil, nil, nil, nil, nil, function(iiIi1IllIIiiii11IIl, iii11Ill1l11liIllii, lIlIliiiiiI1I11l1lI1I) local lI1llI11I1ll11li1i1 = iiIi1IllIIiiii11IIl[80938] local lIl1Il1iil111l1lIiiIi = iiIi1IllIIiiii11IIl[126913] local lIliilii1i1lIIl1iIIiI = iiIi1IllIIiiii11IIl[69029] local lIllllII1iIiIlIiIiI1l = iiIi1IllIIiiii11IIl[126913] - lli1IliI1liI1iiIlil local I11iiIIiIl111Ili1lI = iiIi1IllIIiiii11IIl[542] local Ili1IllI1lI1IIIillI = I1111illil11iiliill[lIl1Il1iil111l1lIiiIi] local lI1lI1lII11ll11IiI1 = {} local IIill1i1iIIi111IlIi = I1Iill11iIIiIIl111I({}, { __index = function(Iiiiil1I1ill1l1li1l, iIIi1ll1IiiIIlili1i) local iilIIlIIi1iIilIi1ii = lI1lI1lII11ll11IiI1[iIIi1ll1IiiIIlili1i] return iilIIlIIi1iIilIi1ii[1][iilIIlIIi1iIilIi1ii[2]] end, __newindex = function(Iiiiil1I1ill1l1li1l, iIIi1ll1IiiIIlili1i, l1111liiiiliI11Iil1) local iilIIlIIi1iIilIi1ii = lI1lI1lII11ll11IiI1[iIIi1ll1IiiIIlili1i] iilIIlIIi1iIilIi1ii[1][iilIIlIIi1iIilIi1ii[2]] = l1111liiiiliI11Iil1 end }) for Iiiii1liliiillIi1il = 1, Ili1IllI1lI1IIIillI[Ii1li11II1IlIiliili] do local lIlii1lIlIi1li1iilI1i = iI1lIiiiIill1l1i1ii[ilI11I1li1iliilllii] if lIlii1lIlIi1li1iilI1i[lIlI1i1illIIl1lI1iIII] == iIII1liiIi1Ii1iIlIl then lI1lI1lII11ll11IiI1[Iiiii1liliiillIi1il - 1] = { l1ilI1i1IIl1Il11I11, lIlii1lIlIi1li1iilI1i[liIlIli1i11il1iiIIl] } elseif lIlii1lIlIi1li1iilI1i[lIlI1i1illIIl1lI1iIII] == lIliiliiiilliIi11lil1 then lI1lI1lII11ll11IiI1[Iiiii1liliiillIi1il - 1] = { Il1I1liI1I111lllllI, lIlii1lIlIi1li1iilI1i[liIlIli1i11il1iiIIl] } end ilI11I1li1iliilllii = ilI11I1li1iliilllii + 1 end if Ili1IllI1lI1IIIillI[Ii1li11II1IlIiliili] > 0 then l11I1Iilli11IlIIIii[#l11I1Iilli11IlIIIii + 1] = lI1lI1lII11ll11IiI1 end local lIllIIIIlIllIIl1i1ll1 = iIIlI11li1111iIIiiI(Ili1IllI1lI1IIIillI, Iii1lii1iIl11lIil1i, IIill1i1iIIi111IlIi) l1ilI1i1IIl1Il11I11[lIliilii1i1lIIl1iIIiI] = lIllIIIIlIllIIl1i1ll1 end, nil, nil, function(iiIi1IllIIiiii11IIl, iii11Ill1l11liIllii, lIlIliiiiiI1I11l1lI1I, l1IiiIiliII1iili111, lIl1IlI1il1IilIllIill) local lIllllII1iIiIlIiIiI1l = iiIi1IllIIiiii11IIl[126913] - lli1IliI1liI1iiIlil local lI1llI11I1ll11li1i1 = iiIi1IllIIiiii11IIl[80938] local lIl1Il1iil111l1lIiiIi = iiIi1IllIIiiii11IIl[126913] local I11iiIIiIl111Ili1lI = iiIi1IllIIiiii11IIl[542] local lIliilii1i1lIIl1iIIiI = iiIi1IllIIiiii11IIl[69029] if lI1llI11I1ll11li1i1 == 253 then return lil1iIIIi1iiil1IllI[25]({ [69029] = (lIliilii1i1lIIl1iIIiI - 202) % 256, [542] = (I11iiIIiIl111Ili1lI - 202) % 256, [126913] = 0 }) end if lI1llI11I1ll11li1i1 == 90 then return lil1iIIIi1iiil1IllI[8]({ [69029] = (lIliilii1i1lIIl1iIIiI - 18) % 256, [542] = (I11iiIIiIl111Ili1lI - 18) % 256, [126913] = 0 }) end for Iiiii1liliiillIi1il = lIliilii1i1lIIl1iIIiI, I11iiIIiIl111Ili1lI do l1ilI1i1IIl1Il11I11[Iiiii1liliiillIi1il] = nil end end } lIl1IIil1iIIl11Ii1l1i[0] = function(iiIi1IllIIiiii11IIl, iii11Ill1l11liIllii, lIlIliiiiiI1I11l1lI1I, l1IiiIiliII1iili111) local lIl1Il1iil111l1lIiiIi = iiIi1IllIIiiii11IIl[126913] local lIliilii1i1lIIl1iIIiI = iiIi1IllIIiiii11IIl[69029] local lIllllII1iIiIlIiIiI1l = iiIi1IllIIiiii11IIl[126913] - lli1IliI1liI1iiIlil local I11iiIIiIl111Ili1lI = iiIi1IllIIiiii11IIl[542] local lI1llI11I1ll11li1i1 = iiIi1IllIIiiii11IIl[80938] if lI1llI11I1ll11li1i1 > 255 then lI1llI11I1ll11li1i1 = IlliI1l1il1il1liIII[lI1llI11I1ll11li1i1 - 256][illl1II1i1lI11iIIlI] else lI1llI11I1ll11li1i1 = l1ilI1i1IIl1Il11I11[lI1llI11I1ll11li1i1] end l1ilI1i1IIl1Il11I11[lIliilii1i1lIIl1iIIiI] = l1ilI1i1IIl1Il11I11[I11iiIIiIl111Ili1lI][lI1llI11I1ll11li1i1] end lIl1IIil1iIIl11Ii1l1i[36] = function(iiIi1IllIIiiii11IIl, iii11Ill1l11liIllii) local lIl1Il1iil111l1lIiiIi = iiIi1IllIIiiii11IIl[126913] local lIliilii1i1lIIl1iIIiI = iiIi1IllIIiiii11IIl[69029] local lIllllII1iIiIlIiIiI1l = iiIi1IllIIiiii11IIl[126913] - lli1IliI1liI1iiIlil local I11iiIIiIl111Ili1lI = iiIi1IllIIiiii11IIl[542] local lI1llI11I1ll11li1i1 = iiIi1IllIIiiii11IIl[80938] local i1IlI111lIli1iIi11l = l1ilI1i1IIl1Il11I11[lIliilii1i1lIIl1iIIiI + 2] local llI11IIiiIl1iIi1iil = l1ilI1i1IIl1Il11I11[lIliilii1i1lIIl1iIIiI] + i1IlI111lIli1iIi11l l1ilI1i1IIl1Il11I11[lIliilii1i1lIIl1iIIiI] = llI11IIiiIl1iIi1iil if i1IlI111lIli1iIi11l > 0 then if llI11IIiiIl1iIi1iil <= l1ilI1i1IIl1Il11I11[lIliilii1i1lIIl1iIIiI + 1] then ilI11I1li1iliilllii = ilI11I1li1iliilllii + lIllllII1iIiIlIiIiI1l l1ilI1i1IIl1Il11I11[lIliilii1i1lIIl1iIIiI + 3] = llI11IIiiIl1iIi1iil end elseif llI11IIiiIl1iIi1iil >= l1ilI1i1IIl1Il11I11[lIliilii1i1lIIl1iIIiI + 1] then ilI11I1li1iliilllii = ilI11I1li1iliilllii + lIllllII1iIiIlIiIiI1l l1ilI1i1IIl1Il11I11[lIliilii1i1lIIl1iIIiI + 3] = llI11IIiiIl1iIi1iil end end lIl1IIil1iIIl11Ii1l1i[28] = function(iiIi1IllIIiiii11IIl, iii11Ill1l11liIllii) local I11iiIIiIl111Ili1lI = iiIi1IllIIiiii11IIl[542] local lI1llI11I1ll11li1i1 = iiIi1IllIIiiii11IIl[80938] local lIllllII1iIiIlIiIiI1l = iiIi1IllIIiiii11IIl[126913] - lli1IliI1liI1iiIlil local lIl1Il1iil111l1lIiiIi = iiIi1IllIIiiii11IIl[126913] local lIliilii1i1lIIl1iIIiI = iiIi1IllIIiiii11IIl[69029] l1ilI1i1IIl1Il11I11[lIliilii1i1lIIl1iIIiI] = -l1ilI1i1IIl1Il11I11[I11iiIIiIl111Ili1lI] end lIl1IIil1iIIl11Ii1l1i[22] = function(iiIi1IllIIiiii11IIl, iii11Ill1l11liIllii) local lI1llI11I1ll11li1i1 = iiIi1IllIIiiii11IIl[80938] local lIllllII1iIiIlIiIiI1l = iiIi1IllIIiiii11IIl[126913] - lli1IliI1liI1iiIlil local I11iiIIiIl111Ili1lI = iiIi1IllIIiiii11IIl[542] local lIl1Il1iil111l1lIiiIi = iiIi1IllIIiiii11IIl[126913] local lIliilii1i1lIIl1iIIiI = iiIi1IllIIiiii11IIl[69029] l1ilI1i1IIl1Il11I11[lIliilii1i1lIIl1iIIiI] = I11iiIIiIl111Ili1lI ~= 0 if lI1llI11I1ll11li1i1 ~= 0 then ilI11I1li1iliilllii = ilI11I1li1iliilllii + 1 end end lIl1IIil1iIIl11Ii1l1i[4] = function(iiIi1IllIIiiii11IIl, iii11Ill1l11liIllii) local lI1llI11I1ll11li1i1 = iiIi1IllIIiiii11IIl[80938] local lIllllII1iIiIlIiIiI1l = iiIi1IllIIiiii11IIl[126913] - lli1IliI1liI1iiIlil local I11iiIIiIl111Ili1lI = iiIi1IllIIiiii11IIl[542] local lIl1Il1iil111l1lIiiIi = iiIi1IllIIiiii11IIl[126913] local lIliilii1i1lIIl1iIIiI = iiIi1IllIIiiii11IIl[69029] if I11iiIIiIl111Ili1lI > 255 then I11iiIIiIl111Ili1lI = IlliI1l1il1il1liIII[I11iiIIiIl111Ili1lI - 256][illl1II1i1lI11iIIlI] else I11iiIIiIl111Ili1lI = l1ilI1i1IIl1Il11I11[I11iiIIiIl111Ili1lI] end if lI1llI11I1ll11li1i1 > 255 then lI1llI11I1ll11li1i1 = IlliI1l1il1il1liIII[lI1llI11I1ll11li1i1 - 256][illl1II1i1lI11iIIlI] else lI1llI11I1ll11li1i1 = l1ilI1i1IIl1Il11I11[lI1llI11I1ll11li1i1] end l1ilI1i1IIl1Il11I11[lIliilii1i1lIIl1iIIiI] = I11iiIIiIl111Ili1lI + lI1llI11I1ll11li1i1 end lIl1IIil1iIIl11Ii1l1i[14] = function(iiIi1IllIIiiii11IIl, iii11Ill1l11liIllii, lIlIliiiiiI1I11l1lI1I, l1IiiIiliII1iili111, lIl1IlI1il1IilIllIill) local lIliilii1i1lIIl1iIIiI = iiIi1IllIIiiii11IIl[69029] local lIllllII1iIiIlIiIiI1l = iiIi1IllIIiiii11IIl[126913] - lli1IliI1liI1iiIlil local lIl1Il1iil111l1lIiiIi = iiIi1IllIIiiii11IIl[126913] local lI1llI11I1ll11li1i1 = iiIi1IllIIiiii11IIl[80938] local I11iiIIiIl111Ili1lI = iiIi1IllIIiiii11IIl[542] l1ilI1i1IIl1Il11I11[lIliilii1i1lIIl1iIIiI] = Il1I1liI1I111lllllI[I11iiIIiIl111Ili1lI] end lIl1IIil1iIIl11Ii1l1i[9] = function(iiIi1IllIIiiii11IIl) local lIliilii1i1lIIl1iIIiI = iiIi1IllIIiiii11IIl[69029] local lIllllII1iIiIlIiIiI1l = iiIi1IllIIiiii11IIl[126913] - lli1IliI1liI1iiIlil local lIl1Il1iil111l1lIiiIi = iiIi1IllIIiiii11IIl[126913] local I11iiIIiIl111Ili1lI = iiIi1IllIIiiii11IIl[542] local lI1llI11I1ll11li1i1 = iiIi1IllIIiiii11IIl[80938] local lIlIlIil1lIii1111llIl = lIliilii1i1lIIl1iIIiI + 2 local iiliiIi1Ili1IiIlI1i = { l1ilI1i1IIl1Il11I11[lIliilii1i1lIIl1iIIiI](l1ilI1i1IIl1Il11I11[lIliilii1i1lIIl1iIIiI + 1], l1ilI1i1IIl1Il11I11[lIliilii1i1lIIl1iIIiI + 2]) } for Iiiii1liliiillIi1il = 1, lI1llI11I1ll11li1i1 do l1ilI1i1IIl1Il11I11[lIlIlIil1lIii1111llIl + Iiiii1liliiillIi1il] = iiliiIi1Ili1IiIlI1i[Iiiii1liliiillIi1il] end if l1ilI1i1IIl1Il11I11[lIliilii1i1lIIl1iIIiI + 3] ~= nil then l1ilI1i1IIl1Il11I11[lIliilii1i1lIIl1iIIiI + 2] = l1ilI1i1IIl1Il11I11[lIliilii1i1lIIl1iIIiI + 3] else ilI11I1li1iliilllii = ilI11I1li1iliilllii + 1 end end lIl1IIil1iIIl11Ii1l1i[32] = function(iiIi1IllIIiiii11IIl) local lI1llI11I1ll11li1i1 = iiIi1IllIIiiii11IIl[80938] local lIliilii1i1lIIl1iIIiI = iiIi1IllIIiiii11IIl[69029] local lIl1Il1iil111l1lIiiIi = iiIi1IllIIiiii11IIl[126913] local I11iiIIiIl111Ili1lI = iiIi1IllIIiiii11IIl[542] local lIllllII1iIiIlIiIiI1l = iiIi1IllIIiiii11IIl[126913] - lli1IliI1liI1iiIlil I11iiIIiIl111Ili1lI = l1ilI1i1IIl1Il11I11[I11iiIIiIl111Ili1lI] if lI1llI11I1ll11li1i1 > 255 then lI1llI11I1ll11li1i1 = IlliI1l1il1il1liIII[lI1llI11I1ll11li1i1 - 256][illl1II1i1lI11iIIlI] else lI1llI11I1ll11li1i1 = l1ilI1i1IIl1Il11I11[lI1llI11I1ll11li1i1] end l1ilI1i1IIl1Il11I11[lIliilii1i1lIIl1iIIiI + 1] = I11iiIIiIl111Ili1lI l1ilI1i1IIl1Il11I11[lIliilii1i1lIIl1iIIiI] = I11iiIIiIl111Ili1lI[lI1llI11I1ll11li1i1] end lIl1IIil1iIIl11Ii1l1i[25] = function(iiIi1IllIIiiii11IIl, iii11Ill1l11liIllii, lIlIliiiiiI1I11l1lI1I) local lI1llI11I1ll11li1i1 = iiIi1IllIIiiii11IIl[80938] local I11iiIIiIl111Ili1lI = iiIi1IllIIiiii11IIl[542] local lIl1Il1iil111l1lIiiIi = iiIi1IllIIiiii11IIl[126913] local lIllllII1iIiIlIiIiI1l = iiIi1IllIIiiii11IIl[126913] - lli1IliI1liI1iiIlil local lIliilii1i1lIIl1iIIiI = iiIi1IllIIiiii11IIl[69029] if I11iiIIiIl111Ili1lI > 255 then I11iiIIiIl111Ili1lI = IlliI1l1il1il1liIII[I11iiIIiIl111Ili1lI - 256][illl1II1i1lI11iIIlI] else I11iiIIiIl111Ili1lI = l1ilI1i1IIl1Il11I11[I11iiIIiIl111Ili1lI] end if lI1llI11I1ll11li1i1 > 255 then lI1llI11I1ll11li1i1 = IlliI1l1il1il1liIII[lI1llI11I1ll11li1i1 - 256][illl1II1i1lI11iIIlI] else lI1llI11I1ll11li1i1 = l1ilI1i1IIl1Il11I11[lI1llI11I1ll11li1i1] end l1ilI1i1IIl1Il11I11[lIliilii1i1lIIl1iIIiI] = I11iiIIiIl111Ili1lI / lI1llI11I1ll11li1i1 end lIl1IIil1iIIl11Ii1l1i[26] = function(iiIi1IllIIiiii11IIl, iii11Ill1l11liIllii, lIlIliiiiiI1I11l1lI1I) local I11iiIIiIl111Ili1lI = iiIi1IllIIiiii11IIl[542] local lIl1Il1iil111l1lIiiIi = iiIi1IllIIiiii11IIl[126913] local lI1llI11I1ll11li1i1 = iiIi1IllIIiiii11IIl[80938] local lIliilii1i1lIIl1iIIiI = iiIi1IllIIiiii11IIl[69029] local lIllllII1iIiIlIiIiI1l = iiIi1IllIIiiii11IIl[126913] - lli1IliI1liI1iiIlil local iiliiIi1Ili1IiIlI1i = l1ilI1i1IIl1Il11I11[I11iiIIiIl111Ili1lI] for Iiiii1liliiillIi1il = I11iiIIiIl111Ili1lI + 1, lI1llI11I1ll11li1i1 do iiliiIi1Ili1IiIlI1i = iiliiIi1Ili1IiIlI1i .. l1ilI1i1IIl1Il11I11[Iiiii1liliiillIi1il] end l1ilI1i1IIl1Il11I11[lIliilii1i1lIIl1iIIiI] = iiliiIi1Ili1IiIlI1i end lIl1IIil1iIIl11Ii1l1i[8] = function(iiIi1IllIIiiii11IIl, iii11Ill1l11liIllii, lIlIliiiiiI1I11l1lI1I, l1IiiIiliII1iili111) local lIliilii1i1lIIl1iIIiI = iiIi1IllIIiiii11IIl[69029] local lI1llI11I1ll11li1i1 = iiIi1IllIIiiii11IIl[80938] local lIllllII1iIiIlIiIiI1l = iiIi1IllIIiiii11IIl[126913] - lli1IliI1liI1iiIlil local lIl1Il1iil111l1lIiiIi = iiIi1IllIIiiii11IIl[126913] local I11iiIIiIl111Ili1lI = iiIi1IllIIiiii11IIl[542] local iIlilI1iilIIiIIIlIi if lIl1Il1iil111l1lIiiIi == 100000 then iIlilI1iilIIiIIIlIi = l1ilI1i1IIl1Il11I11[251] else iIlilI1iilIIiIIIlIi = IlliI1l1il1il1liIII[lIl1Il1iil111l1lIiiIi][illl1II1i1lI11iIIlI] end Iii1lii1iIl11lIil1i[iIlilI1iilIIiIIIlIi] = l1ilI1i1IIl1Il11I11[lIliilii1i1lIIl1iIIiI] end lIl1IIil1iIIl11Ii1l1i[29] = function(iiIi1IllIIiiii11IIl, iii11Ill1l11liIllii, lIlIliiiiiI1I11l1lI1I) local lI1llI11I1ll11li1i1 = iiIi1IllIIiiii11IIl[80938] local lIllllII1iIiIlIiIiI1l = iiIi1IllIIiiii11IIl[126913] - lli1IliI1liI1iiIlil local I11iiIIiIl111Ili1lI = iiIi1IllIIiiii11IIl[542] local lIliilii1i1lIIl1iIIiI = iiIi1IllIIiiii11IIl[69029] local lIl1Il1iil111l1lIiiIi = iiIi1IllIIiiii11IIl[126913] Il1I1liI1I111lllllI[I11iiIIiIl111Ili1lI] = l1ilI1i1IIl1Il11I11[lIliilii1i1lIIl1iIIiI] end lIl1IIil1iIIl11Ii1l1i[30] = function(iiIi1IllIIiiii11IIl) local lI1llI11I1ll11li1i1 = iiIi1IllIIiiii11IIl[80938] local lIliilii1i1lIIl1iIIiI = iiIi1IllIIiiii11IIl[69029] local lIllllII1iIiIlIiIiI1l = iiIi1IllIIiiii11IIl[126913] - lli1IliI1liI1iiIlil local lIl1Il1iil111l1lIiiIi = iiIi1IllIIiiii11IIl[126913] local I11iiIIiIl111Ili1lI = iiIi1IllIIiiii11IIl[542] ilI11I1li1iliilllii = ilI11I1li1iliilllii + lIllllII1iIiIlIiIiI1l end lIl1IIil1iIIl11Ii1l1i[13] = function(iiIi1IllIIiiii11IIl, iii11Ill1l11liIllii, lIlIliiiiiI1I11l1lI1I) local lIllllII1iIiIlIiIiI1l = iiIi1IllIIiiii11IIl[126913] - lli1IliI1liI1iiIlil local lIliilii1i1lIIl1iIIiI = iiIi1IllIIiiii11IIl[69029] local lI1llI11I1ll11li1i1 = iiIi1IllIIiiii11IIl[80938] local lIl1Il1iil111l1lIiiIi = iiIi1IllIIiiii11IIl[126913] local I11iiIIiIl111Ili1lI = iiIi1IllIIiiii11IIl[542] if not not l1ilI1i1IIl1Il11I11[I11iiIIiIl111Ili1lI] == (lI1llI11I1ll11li1i1 == 0) then ilI11I1li1iliilllii = ilI11I1li1iliilllii + 1 else l1ilI1i1IIl1Il11I11[lIliilii1i1lIIl1iIIiI] = l1ilI1i1IIl1Il11I11[I11iiIIiIl111Ili1lI] end end lIl1IIil1iIIl11Ii1l1i[31] = function(iiIi1IllIIiiii11IIl, iii11Ill1l11liIllii) local lIllllII1iIiIlIiIiI1l = iiIi1IllIIiiii11IIl[126913] - lli1IliI1liI1iiIlil local lIliilii1i1lIIl1iIIiI = iiIi1IllIIiiii11IIl[69029] local lIl1Il1iil111l1lIiiIi = iiIi1IllIIiiii11IIl[126913] local lI1llI11I1ll11li1i1 = iiIi1IllIIiiii11IIl[80938] local I11iiIIiIl111Ili1lI = iiIi1IllIIiiii11IIl[542] if I11iiIIiIl111Ili1lI > 255 then I11iiIIiIl111Ili1lI = IlliI1l1il1il1liIII[I11iiIIiIl111Ili1lI - 256][illl1II1i1lI11iIIlI] else I11iiIIiIl111Ili1lI = l1ilI1i1IIl1Il11I11[I11iiIIiIl111Ili1lI] end if lI1llI11I1ll11li1i1 > 255 then lI1llI11I1ll11li1i1 = IlliI1l1il1il1liIII[lI1llI11I1ll11li1i1 - 256][illl1II1i1lI11iIIlI] else lI1llI11I1ll11li1i1 = l1ilI1i1IIl1Il11I11[lI1llI11I1ll11li1i1] end l1ilI1i1IIl1Il11I11[lIliilii1i1lIIl1iIIiI] = I11iiIIiIl111Ili1lI - lI1llI11I1ll11li1i1 end lIl1IIil1iIIl11Ii1l1i[35] = function(iiIi1IllIIiiii11IIl, iii11Ill1l11liIllii, lIlIliiiiiI1I11l1lI1I) local lIl1Il1iil111l1lIiiIi = iiIi1IllIIiiii11IIl[126913] local I11iiIIiIl111Ili1lI = iiIi1IllIIiiii11IIl[542] local lIliilii1i1lIIl1iIIiI = iiIi1IllIIiiii11IIl[69029] local lIllllII1iIiIlIiIiI1l = iiIi1IllIIiiii11IIl[126913] - lli1IliI1liI1iiIlil local lI1llI11I1ll11li1i1 = iiIi1IllIIiiii11IIl[80938] if I11iiIIiIl111Ili1lI > 255 then I11iiIIiIl111Ili1lI = IlliI1l1il1il1liIII[I11iiIIiIl111Ili1lI - 256][illl1II1i1lI11iIIlI] else I11iiIIiIl111Ili1lI = l1ilI1i1IIl1Il11I11[I11iiIIiIl111Ili1lI] end if lI1llI11I1ll11li1i1 > 255 then lI1llI11I1ll11li1i1 = IlliI1l1il1il1liIII[lI1llI11I1ll11li1i1 - 256][illl1II1i1lI11iIIlI] else lI1llI11I1ll11li1i1 = l1ilI1i1IIl1Il11I11[lI1llI11I1ll11li1i1] end if I11iiIIiIl111Ili1lI < lI1llI11I1ll11li1i1 ~= (lIliilii1i1lIIl1iIIiI ~= 0) then ilI11I1li1iliilllii = ilI11I1li1iliilllii + 1 end end lIl1IIil1iIIl11Ii1l1i[21] = function(iiIi1IllIIiiii11IIl) local lI1llI11I1ll11li1i1 = iiIi1IllIIiiii11IIl[80938] local lIl1Il1iil111l1lIiiIi = iiIi1IllIIiiii11IIl[126913] local I11iiIIiIl111Ili1lI = iiIi1IllIIiiii11IIl[542] local lIllllII1iIiIlIiIiI1l = iiIi1IllIIiiii11IIl[126913] - lli1IliI1liI1iiIlil local lIliilii1i1lIIl1iIIiI = iiIi1IllIIiiii11IIl[69029] if I11iiIIiIl111Ili1lI > 255 then I11iiIIiIl111Ili1lI = IlliI1l1il1il1liIII[I11iiIIiIl111Ili1lI - 256][illl1II1i1lI11iIIlI] else I11iiIIiIl111Ili1lI = l1ilI1i1IIl1Il11I11[I11iiIIiIl111Ili1lI] end if lI1llI11I1ll11li1i1 > 255 then lI1llI11I1ll11li1i1 = IlliI1l1il1il1liIII[lI1llI11I1ll11li1i1 - 256][illl1II1i1lI11iIIlI] else lI1llI11I1ll11li1i1 = l1ilI1i1IIl1Il11I11[lI1llI11I1ll11li1i1] end l1ilI1i1IIl1Il11I11[lIliilii1i1lIIl1iIIiI] = I11iiIIiIl111Ili1lI * lI1llI11I1ll11li1i1 end lIl1IIil1iIIl11Ii1l1i[24] = function(iiIi1IllIIiiii11IIl, iii11Ill1l11liIllii, lIlIliiiiiI1I11l1lI1I, l1IiiIiliII1iili111) local lIl1Il1iil111l1lIiiIi = iiIi1IllIIiiii11IIl[126913] local lI1llI11I1ll11li1i1 = iiIi1IllIIiiii11IIl[80938] local lIllllII1iIiIlIiIiI1l = iiIi1IllIIiiii11IIl[126913] - lli1IliI1liI1iiIlil local I11iiIIiIl111Ili1lI = iiIi1IllIIiiii11IIl[542] local lIliilii1i1lIIl1iIIiI = iiIi1IllIIiiii11IIl[69029] l1ilI1i1IIl1Il11I11[lIliilii1i1lIIl1iIIiI] = IlliI1l1il1il1liIII[lIl1Il1iil111l1lIiiIi][illl1II1i1lI11iIIlI] end lIl1IIil1iIIl11Ii1l1i[19] = function(iiIi1IllIIiiii11IIl, iii11Ill1l11liIllii, lIlIliiiiiI1I11l1lI1I) local lIliilii1i1lIIl1iIIiI = iiIi1IllIIiiii11IIl[69029] local lIl1Il1iil111l1lIiiIi = iiIi1IllIIiiii11IIl[126913] local I11iiIIiIl111Ili1lI = iiIi1IllIIiiii11IIl[542] local lI1llI11I1ll11li1i1 = iiIi1IllIIiiii11IIl[80938] local lIllllII1iIiIlIiIiI1l = iiIi1IllIIiiii11IIl[126913] - lli1IliI1liI1iiIlil local lil1Ii1lI11ilIiiil1, Ii11Ill1IlI1Il11I1i, ll1illI1i11lii1IlII if I11iiIIiIl111Ili1lI ~= 1 then if I11iiIIiIl111Ili1lI ~= 0 then Ii11Ill1IlI1Il11I1i = lIliilii1i1lIIl1iIIiI + I11iiIIiIl111Ili1lI - 1 else Ii11Ill1IlI1Il11I1i = Il1i11lI1IlIl111ili end Ii11Ill1IlI1Il11I1i, lil1Ii1lI11ilIiiil1 = I1I1i1lIIIlIi1i11iI(l1ilI1i1IIl1Il11I11[lIliilii1i1lIIl1iIIiI](lilIiIiliII1iIli111(l1ilI1i1IIl1Il11I11, lIliilii1i1lIIl1iIIiI + 1, Ii11Ill1IlI1Il11I1i))) else Ii11Ill1IlI1Il11I1i, lil1Ii1lI11ilIiiil1 = I1I1i1lIIIlIi1i11iI(l1ilI1i1IIl1Il11I11[lIliilii1i1lIIl1iIIiI]()) end if lI1llI11I1ll11li1i1 ~= 1 then if lI1llI11I1ll11li1i1 ~= 0 then Ii11Ill1IlI1Il11I1i = lIliilii1i1lIIl1iIIiI + lI1llI11I1ll11li1i1 - 2 else Ii11Ill1IlI1Il11I1i = Ii11Ill1IlI1Il11I1i + lIliilii1i1lIIl1iIIiI end ll1illI1i11lii1IlII = 0 for Iiiii1liliiillIi1il = lIliilii1i1lIIl1iIIiI, Ii11Ill1IlI1Il11I1i do ll1illI1i11lii1IlII = ll1illI1i11lii1IlII + 1 l1ilI1i1IIl1Il11I11[Iiiii1liliiillIi1il] = lil1Ii1lI11ilIiiil1[ll1illI1i11lii1IlII] end end Il1i11lI1IlIl111ili = Ii11Ill1IlI1Il11I1i - 1 end lIl1IIil1iIIl11Ii1l1i[33] = function(iiIi1IllIIiiii11IIl, iii11Ill1l11liIllii) local I11iiIIiIl111Ili1lI = iiIi1IllIIiiii11IIl[542] local lIl1Il1iil111l1lIiiIi = iiIi1IllIIiiii11IIl[126913] local lIllllII1iIiIlIiIiI1l = iiIi1IllIIiiii11IIl[126913] - lli1IliI1liI1iiIlil local lI1llI11I1ll11li1i1 = iiIi1IllIIiiii11IIl[80938] local lIliilii1i1lIIl1iIIiI = iiIi1IllIIiiii11IIl[69029] local lIlIlIil1lIii1111llIl = (lI1llI11I1ll11li1i1 - 1) * 50 if I11iiIIiIl111Ili1lI == 0 then I11iiIIiIl111Ili1lI = Il1i11lI1IlIl111ili - lIliilii1i1lIIl1iIIiI end for Iiiii1liliiillIi1il = 1, I11iiIIiIl111Ili1lI do l1ilI1i1IIl1Il11I11[lIliilii1i1lIIl1iIIiI][lIlIlIil1lIii1111llIl + Iiiii1liliiillIi1il] = l1ilI1i1IIl1Il11I11[lIliilii1i1lIIl1iIIiI + Iiiii1liliiillIi1il] end end lil1iIIIi1iiil1IllI = { lIl1IIil1iIIl11Ii1l1i[13], lIl1IIil1iIIl11Ii1l1i[26], lIl1IIil1iIIl11Ii1l1i[21], lIl1IIil1iIIl11Ii1l1i[1], lIl1IIil1iIIl11Ii1l1i[30], lIl1IIil1iIIl11Ii1l1i[25], lIl1IIil1iIIl11Ii1l1i[0], lIl1IIil1iIIl11Ii1l1i[2], lIl1IIil1iIIl11Ii1l1i[36], lIl1IIil1iIIl11Ii1l1i[16], lIl1IIil1iIIl11Ii1l1i[12], lIl1IIil1iIIl11Ii1l1i[6], lIl1IIil1iIIl11Ii1l1i[33], lIl1IIil1iIIl11Ii1l1i[28], lIl1IIil1iIIl11Ii1l1i[22], lIl1IIil1iIIl11Ii1l1i[27], lIl1IIil1iIIl11Ii1l1i[31], lIl1IIil1iIIl11Ii1l1i[29], lIl1IIil1iIIl11Ii1l1i[37], lIl1IIil1iIIl11Ii1l1i[7], lIl1IIil1iIIl11Ii1l1i[15], lIl1IIil1iIIl11Ii1l1i[34], lIl1IIil1iIIl11Ii1l1i[19], lIl1IIil1iIIl11Ii1l1i[18], lIl1IIil1iIIl11Ii1l1i[14], lIl1IIil1iIIl11Ii1l1i[24], lIl1IIil1iIIl11Ii1l1i[10], lIl1IIil1iIIl11Ii1l1i[3], lIl1IIil1iIIl11Ii1l1i[4], lIl1IIil1iIIl11Ii1l1i[20], lIl1IIil1iIIl11Ii1l1i[17], lIl1IIil1iIIl11Ii1l1i[5], lIl1IIil1iIIl11Ii1l1i[9], lIl1IIil1iIIl11Ii1l1i[23], lIl1IIil1iIIl11Ii1l1i[11], lIl1IIil1iIIl11Ii1l1i[8], lIl1IIil1iIIl11Ii1l1i[35], lIl1IIil1iIIl11Ii1l1i[32] } local function ll1illI1i11lii1IlII() while true do local iiIi1IllIIiiii11IIl = iI1lIiiiIill1l1i1ii[ilI11I1li1iliilllii] ilI11I1li1iliilllii = ilI11I1li1iliilllii + 1 local lii1l1i11l1li1l11i1, l1il1ll111iiII1lili, lIlIiIIiiIlli1IlIiIIl = lil1iIIIi1iiil1IllI[iiIi1IllIIiiii11IIl[117975] + 1](iiIi1IllIIiiii11IIl) if lii1l1i11l1li1l11i1 then return l1il1ll111iiII1lili, lIlIiIIiiIlli1IlIiIIl end end end local Ii1iilii111iIll1lII, l1il1ll111iiII1lili, lIlIiIIiiIlli1IlIiIIl = Iil11i1iil1iI1lilI1(ll1illI1i11lii1IlII) if Ii1iilii111iIll1lII then if l1il1ll111iiII1lili then return lilIiIiliII1iIli111(l1ilI1i1IIl1Il11I11, l1il1ll111iiII1lili, lIlIiIIiiIlli1IlIiIIl) end else local ii11Iiiili1l1Ililll = lIlIlll1Iiiil1l1iiiI1("Luraph Script:" .. (llliIi1II1lII11lIi1[ilI11I1li1iliilllii - 1] or "") .. ": " .. lI1IllliiiliI111ili(l1il1ll111iiII1lili), "[^:]+:%d*: ", function(IiiIlIlii1illiI11l1) if not IIllIlli11II1Iiilll(IiiIlIlii1illiI11l1, "Luraph Script:%d") then return "" end end) l1i1i11IllIi1lilI1i(ii11Iiiili1l1Ililll, 0) end end lI1liii1iiIiI1lII1i(lllliIlIl1llllIlil1, Iii1lii1iIl11lIil1i) return lllliIlIl1llllIlil1 end local lIlI11ll1il1lIlil1Ill = lil1il11lIliliIilil() return iIIlI11li1111iIIiiI(lIlI11ll1il1lIlil1Ill, Iii1lii1iIl11lIil1i)() end lIliIIiiiIl111ilIili1("LPH|l1ill1iili1IlIiIiI1())