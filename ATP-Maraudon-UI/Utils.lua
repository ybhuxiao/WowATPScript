local i1IlIil1IlllliIll1i = assert local lIiIiiI1llilIlIlili = select local lIll111ill1liI1Ililil = tonumber local lIliliiiIi1111lIlii1I = unpack local iliiI1iIIiI1iI1IIil = pcall local lIliillll1I111IIl1I1I = setfenv local lIllIiIIlIii1I1IIIiil = setmetatable local Iilli1iIliii11iilli = type local ll1i1iiiiII1llIllll = getfenv local liIlII1llilIllIilil = tostring local ilIllii1i1IiiIil1ll = error local iiIIli11I1i1Ill1Ili = string.sub local li1I1l1Il11liiiI11l = string.byte local ii1lii1I1IiI1lI1iIi = string.char local l1lIlilliI1lIIli11I = string.rep local iI1Iii11Ii11lii1I11 = string.gsub local li1lilllllli1il1lI1 = string.match local il111i1I1111lIl1lli = #{6699} local IillIIii1iiI1I1l111 = {} local IiiI1lili1iiIIIi11i = 1 local function IlIl1IIlI1ilIllilli(i1ll11iil1iI1ilii1i, lIll1IlIIIIil1iii1I1l) local lIl1i1ll1illl1ii1lI1I i1ll11iil1iI1ilii1i = iI1Iii11Ii11lii1I11(iiIIli11I1i1Ill1Ili(i1ll11iil1iI1ilii1i, 5), "..", function(I1Ii1Iii11iIiil1l1l) if li1I1l1Il11liiiI11l(I1Ii1Iii11iIiil1l1l, 2) == 71 then lIl1i1ll1illl1ii1lI1I = lIll111ill1liI1Ililil(iiIIli11I1i1Ill1Ili(I1Ii1Iii11iIiil1l1l, 1, 1)) return "" else local l11illiIiIilillll1l = ii1lii1I1IiI1lI1iIi(lIll111ill1liI1Ililil(I1Ii1Iii11iIiil1l1l, 16)) if lIl1i1ll1illl1ii1lI1I then local i1ll1IIiIIl1lliI1li = l1lIlilliI1lIIli11I(l11illiIiIilillll1l, lIl1i1ll1illl1ii1lI1I) lIl1i1ll1illl1ii1lI1I = nil return i1ll1IIiIIl1lliI1li else return l11illiIiIilillll1l end end end) local function li1II1lliliI1llli1I() local iIiilI11II1iIiIll11 = li1I1l1Il11liiiI11l(i1ll11iil1iI1ilii1i, IiiI1lili1iiIIIi11i, IiiI1lili1iiIIIi11i) IiiI1lili1iiIIIi11i = IiiI1lili1iiIIIi11i + 1 return iIiilI11II1iIiIll11 end local function li1Il1IiiIli11iIili() local iIiilI11II1iIiIll11, l11illiIiIilillll1l, i1ll1IIiIIl1lliI1li, lIliiIIIl1Ili11liII1i = li1I1l1Il11liiiI11l(i1ll11iil1iI1ilii1i, IiiI1lili1iiIIIi11i, IiiI1lili1iiIIIi11i + 3) IiiI1lili1iiIIIi11i = IiiI1lili1iiIIIi11i + 4 return lIliiIIIl1Ili11liII1i * 16777216 + i1ll1IIiIIl1lliI1li * 65536 + l11illiIiIilillll1l * 256 + iIiilI11II1iIiIll11 end local function i11iilIlIIIIl11IiIi(Illli11IiiiiiiilllI, iIi1I1I11Iili1lIliI, IIiiI1IIiIllI1IIIlI) if IIiiI1IIiIllI1IIIlI then local Ill1iIIIlII1Ii111lI, IIIli1ii1IIliII11li = 0, 0 for iIIiIl11iIl1IIl1i1I = iIi1I1I11Iili1lIliI, IIiiI1IIiIllI1IIIlI do Ill1iIIIlII1Ii111lI = Ill1iIIIlII1Ii111lI + 2 ^ IIIli1ii1IIliII11li * i11iilIlIIIIl11IiIi(Illli11IiiiiiiilllI, iIIiIl11iIl1IIl1i1I) IIIli1ii1IIliII11li = IIIli1ii1IIliII11li + 1 end return Ill1iIIIlII1Ii111lI else local lIl11Il1i11I1Iiiil1Ii = 2 ^ (iIi1I1I11Iili1lIliI - 1) return lIl11Il1i11I1Iiiil1Ii <= Illli11IiiiiiiilllI % (lIl11Il1i11I1Iiiil1Ii + lIl11Il1i11I1Iiiil1Ii) and 1 or 0 end end local function liilIi1I1iiiIl1Il11() local iIiilI11II1iIiIll11, l11illiIiIilillll1l = li1Il1IiiIli11iIili(), li1Il1IiiIli11iIili() if iIiilI11II1iIiIll11 == 0 and l11illiIiIilillll1l == 0 then return 0 end return (-2 * i11iilIlIIIIl11IiIi(l11illiIiIilillll1l, 32) + 1) * 2 ^ (i11iilIlIIIIl11IiIi(l11illiIiIilillll1l, 21, 31) - 1023) * ((i11iilIlIIIIl11IiIi(l11illiIiIilillll1l, 1, 20) * 4294967296 + iIiilI11II1iIiIll11) / 4503599627370496 + 1) end local function lIl1il1IIiliilIIillli(li11I1l1li11l1iIlI1) local I11llilllIIiliIiiI1 = { li1I1l1Il11liiiI11l(i1ll11iil1iI1ilii1i, IiiI1lili1iiIIIi11i, IiiI1lili1iiIIIi11i + 3) } IiiI1lili1iiIIIi11i = IiiI1lili1iiIIIi11i + 4 local i1i1i11IIil1I1iIlil = { nil, nil, nil, nil, nil, nil, nil, nil } for iIIiIl11iIl1IIl1i1I = 1, 8 do i1i1i11IIil1I1iIlil[iIIiIl11iIl1IIl1i1I] = i11iilIlIIIIl11IiIi(li11I1l1li11l1iIlI1, iIIiIl11iIl1IIl1i1I) end local i1l11IiIlIlIllili1l = "" for iIIiIl11iIl1IIl1i1I = 1, 4 do local Ill1iIIIlII1Ii111lI, IIIli1ii1IIliII11li = 0, 0 for lIlil111liIl1lIliiiIi = 1, 8 do local ililIIIiI111I1Iiii1 = i11iilIlIIIIl11IiIi(I11llilllIIiliIiiI1[iIIiIl11iIl1IIl1i1I], lIlil111liIl1lIliiiIi) if i1i1i11IIil1I1iIlil[lIlil111liIl1lIliiiIi] == 1 then ililIIIiI111I1Iiii1 = ililIIIiI111I1Iiii1 == 1 and 0 or 1 end Ill1iIIIlII1Ii111lI = Ill1iIIIlII1Ii111lI + 2 ^ IIIli1ii1IIliII11li * ililIIIiI111I1Iiii1 IIIli1ii1IIliII11li = IIIli1ii1IIliII11li + 1 end i1l11IiIlIlIllili1l = i1l11IiIlIlIllili1l .. i1l11IiIlIlIllili1l.char(Ill1iIIIlII1Ii111lI) end local iIiilI11II1iIiIll11, l11illiIiIilillll1l, i1ll1IIiIIl1lliI1li, lIliiIIIl1Ili11liII1i = li1I1l1Il11liiiI11l(i1l11IiIlIlIllili1l, 1, 4) return lIliiIIIl1Ili11liII1i * 16777216 + i1ll1IIiIIl1lliI1li * 65536 + l11illiIiIilillll1l * 256 + iIiilI11II1iIiIll11 end local function lIll11Iill1i1111l1l1I(li11I1l1li11l1iIlI1) local lIIII1li1llIIi1l1Ii = li1Il1IiiIli11iIili() IiiI1lili1iiIIIi11i = IiiI1lili1iiIIIi11i + lIIII1li1llIIi1l1Ii local i1i1i11IIil1I1iIlil = { nil, nil, nil, nil, nil, nil, nil, nil } for iIIiIl11iIl1IIl1i1I = 1, 8 do i1i1i11IIil1I1iIlil[iIIiIl11iIl1IIl1i1I] = i11iilIlIIIIl11IiIi(li11I1l1li11l1iIlI1, iIIiIl11iIl1IIl1i1I) end local i1l11IiIlIlIllili1l = "" for iIIiIl11iIl1IIl1i1I = 1, lIIII1li1llIIi1l1Ii do local Ill1iIIIlII1Ii111lI, IIIli1ii1IIliII11li = 0, 0 for lIlil111liIl1lIliiiIi = 1, 8 do local ililIIIiI111I1Iiii1 = i11iilIlIIIIl11IiIi(li1I1l1Il11liiiI11l(i1ll11iil1iI1ilii1i, IiiI1lili1iiIIIi11i - lIIII1li1llIIi1l1Ii + iIIiIl11iIl1IIl1i1I - 1), lIlil111liIl1lIliiiIi) if i1i1i11IIil1I1iIlil[lIlil111liIl1lIliiiIi] == 1 then ililIIIiI111I1Iiii1 = ililIIIiI111I1Iiii1 == 1 and 0 or 1 end Ill1iIIIlII1Ii111lI = Ill1iIIIlII1Ii111lI + 2 ^ IIIli1ii1IIliII11li * ililIIIiI111I1Iiii1 IIIli1ii1IIliII11li = IIIli1ii1IIliII11li + 1 end i1l11IiIlIlIllili1l = i1l11IiIlIlIllili1l .. i1l11IiIlIlIllili1l.char(Ill1iIIIlII1Ii111lI) end return i1l11IiIlIlIllili1l end local il1lii1iIIlIIiilI11 = li1II1lliliI1llli1I() local lii1llIiil1iIiIIiII = li1II1lliliI1llli1I() local function lIl1i11ililIliiiIllii() local iIIil1iI1l11Il111Il = { [101693] = {}, [118730] = {}, [82729] = {}, [102] = {} } li1II1lliliI1llli1I() iIIil1iI1l11Il111Il[114559] = li1II1lliliI1llli1I() li1Il1IiiIli11iIili() local ll1IIiiiiliI1lI1il1 = li1Il1IiiIli11iIili() - (#{ 6665, 5915, 1793, 2436, 6002, 4748, 6758, 3514, 1334, 6351, 2636, 5250, 2762, 5602, 5066, 829, 2740, 6479, 4955, 568, 4320, 5175, 4872 } + 133702) for iIIiIl11iIl1IIl1i1I = il111i1I1111lIl1lli, ll1IIiiiiliI1lI1il1 do local l1Iil1i111ilIIi11I1 = {} local liIlI1lIiIiIiIIiIIl = lIl1il1IIiliilIIillli(lii1llIiil1iIiIIiII) l1Iil1i111ilIIi11I1[60801] = i11iilIlIIIIl11IiIi(liIlI1lIiIiIiIIiIIl, #{1947}, #{ 2468, 4451, 2784, 2879, 1173, 5084, 4611, 799, 6101 }) l1Iil1i111ilIIi11I1[58323] = i11iilIlIIIIl11IiIi(liIlI1lIiIiIiIIiIIl, #{ 6291, 945, 6129, 4283, 5797, 875, 6942, 4326, 4508, 2542 }, #{ 3369, 4204, 5467, 5406, 3082, 2073, 3435, 829, 6610, 4853, 5744, 2062, 6462, 1676, 4755, 4818, 2177, 6244 }) l1Iil1i111ilIIi11I1[44873] = i11iilIlIIIIl11IiIi(liIlI1lIiIiIiIIiIIl, #{ 1441, 4644, 2541, 847, 3739, 712, 4516, 2218, 1393, 3828, 1450, 2259, 6472, 6644, 537, 6328, 6596, 4230, 3786 }, #{ 4159, 5799, 6062, 4658, 3043, 1101, 3840, 5217, 2528, 1084, 4782, 2942, 2987, 4222, 3039, 5461, 850, 1996, 6160, 3951, 4313, 3796, 2707 } + 3) l1Iil1i111ilIIi11I1[105359] = i11iilIlIIIIl11IiIi(liIlI1lIiIiIiIIiIIl, #{ 1397, 1073, 2338, 6676, 605, 5709, 939, 167, 325, 5878, 1456, 1759, 3636, 6222, 5351, 5092, 1411, 6021, 5394, 1686, 6346 } + 6, #{ 4724, 2909, 6436, 2224, 3739, 5851, 6924, 4239, 6805, 2310, 3735, 3249, 715, 6086, 5651, 2947, 2884, 2405, 6291, 6002 } + 12) l1Iil1i111ilIIi11I1[6495] = i11iilIlIIIIl11IiIi(liIlI1lIiIiIiIIiIIl, #{1896}, #{ 2844, 4310, 6279, 691, 3610, 6524, 3751, 4372, 6743, 158, 190, 1271, 3608, 4824, 2361, 6209, 1504, 2917 }) iIIil1iI1l11Il111Il[101693][iIIiIl11iIl1IIl1i1I] = l1Iil1i111ilIIi11I1 end local ll1IIiiiiliI1lI1il1 = li1Il1IiiIli11iIili() for iIIiIl11iIl1IIl1i1I = il111i1I1111lIl1lli, ll1IIiiiiliI1lI1il1 do iIIil1iI1l11Il111Il[102][iIIiIl11iIl1IIl1i1I] = li1Il1IiiIli11iIili() end li1Il1IiiIli11iIili() li1II1lliliI1llli1I() iIIil1iI1l11Il111Il[86294] = li1II1lliliI1llli1I() li1Il1IiiIli11iIili() li1II1lliliI1llli1I() li1II1lliliI1llli1I() li1Il1IiiIli11iIili() local ll1IIiiiiliI1lI1il1 = li1Il1IiiIli11iIili() - (#{ 2319, 3398, 1096, 1763, 4030, 6435, 1190, 2288, 5919, 423, 4162, 6000, 5571, 5168, 3903, 5145, 3266, 5664, 4939, 5939, 2468, 6325, 4701 } + 133755) for iIIiIl11iIl1IIl1i1I = il111i1I1111lIl1lli, ll1IIiiiiliI1lI1il1 do local llllilI11lIIl1ii1i1 = {} local Iilli1iIliii11iilli = li1II1lliliI1llli1I() if Iilli1iIliii11iilli == #{ 5884, 2919, 1011, 6147, 2185, 955, 3001, 867, 4968, 4590, 811, 1317, 2199, 3844, 5745, 5167, 1231, 733, 3712, 6485, 561 } + 107 then llllilI11lIIl1ii1i1[92726] = liilIi1I1iiiIl1Il11() end if Iilli1iIliii11iilli == #{ 790, 1652, 2550, 4363, 2485, 1258, 4118, 3427, 5521, 4333, 706, 1478, 5016, 6100, 6933, 4227, 4795, 934, 1606, 5189, 5801, 789 } + 80 then llllilI11lIIl1ii1i1[92726] = liilIi1I1iiiIl1Il11() + liilIi1I1iiiIl1Il11() end if Iilli1iIliii11iilli == #{ 4705, 5173, 4968, 1665, 1512, 3389, 6954, 3400, 3533, 4114, 4550, 6477, 6440, 6456, 5346, 6550, 4421, 5680, 3393, 6131, 5122, 1648, 65 } + 164 then llllilI11lIIl1ii1i1[92726] = liilIi1I1iiiIl1Il11() end if Iilli1iIliii11iilli == #{ 252, 6097, 5364, 5997, 2880, 3859, 6034, 1086, 5699, 4547, 2826, 2224, 6577, 1319, 2826, 723, 808, 2904, 548, 59, 3294, 5110, 5088, 420 } + 2 then llllilI11lIIl1ii1i1[92726] = lIll11Iill1i1111l1l1I(#{ 4250, 3992, 5796, 6677, 2299, 375, 1190, 2377, 5438, 1314, 5108, 623, 701, 6234, 3169, 2392, 1741, 6797, 651, 1117, 2205 } + 99) end if Iilli1iIliii11iilli == #{ 4698, 3359, 598, 838, 934, 563, 6532, 3614, 736, 3681, 5073, 1795, 3087, 2250, 269, 6721, 1276, 6387, 6725, 6312 } + 185 then llllilI11lIIl1ii1i1[92726] = liilIi1I1iiiIl1Il11() end if Iilli1iIliii11iilli == #{ 2043, 5953, 721, 4472, 2038, 699, 331, 2153, 502, 1259, 4610, 4733, 4130, 6421, 4892, 5534, 6741, 6297, 1838, 5879, 4164 } + 105 then llllilI11lIIl1ii1i1[92726] = #{ 4442, 1906, 573, 6163, 3942, 2712, 6350, 181, 4666, 5680, 3345, 1594, 5302, 5356, 707, 4943, 274, 2617, 2054, 4574 } + 125468 == #{ 4442, 1906, 573, 6163, 3942, 2712, 6350, 181, 4666, 5680, 3345, 1594, 5302, 5356, 707, 4943, 274, 2617, 2054, 4574 } + 125468 end if Iilli1iIliii11iilli == #{ 1112, 2477, 1502, 5187, 1695, 6485, 6716, 223, 1408, 1238, 4236, 2168, 326, 2385, 5579, 5975, 23, 5437, 6791, 1893, 6230, 6641, 642, 1904 } + 5 then llllilI11lIIl1ii1i1[92726] = #{ 1851, 3765, 4601, 6217, 1202, 6841, 5944, 435, 5802, 955, 6308, 96, 1465, 1978, 6526, 1697, 447, 2204, 6011, 5907, 5283, 993 } + 98211 == #{ 5646, 5318, 6386, 2210, 2924, 2701, 5705, 5795, 5074, 6885, 5366, 185, 1461, 4226, 6484, 1152, 6854, 4887, 1334, 6942, 5358 } + 43250 end if Iilli1iIliii11iilli == #{ 2508, 5508, 2904, 5186, 4924, 4431, 5539, 4502, 6921, 1138, 3455, 5357, 4917, 797, 5839, 6255, 2863, 680, 4817, 1997, 6201 } + 110 then llllilI11lIIl1ii1i1[92726] = li1II1lliliI1llli1I() end if Iilli1iIliii11iilli == #{} then llllilI11lIIl1ii1i1[92726] = lIll11Iill1i1111l1l1I(il1lii1iIIlIIiilI11) end iIIil1iI1l11Il111Il[82729][iIIiIl11iIl1IIl1i1I - il111i1I1111lIl1lli] = llllilI11lIIl1ii1i1 end iIIil1iI1l11Il111Il[76236] = li1II1lliliI1llli1I() local ll1IIiiiiliI1lI1il1 = li1Il1IiiIli11iIili() for iIIiIl11iIl1IIl1i1I = il111i1I1111lIl1lli, ll1IIiiiiliI1lI1il1 do iIIil1iI1l11Il111Il[118730][iIIiIl11iIl1IIl1i1I - il111i1I1111lIl1lli] = lIl1i11ililIliiiIllii() end li1Il1IiiIli11iIili() li1II1lliliI1llli1I() return iIIil1iI1l11Il111Il end local function il1ii1ilii11l1i1l1I(iIIil1iI1l11Il111Il, lIll1IlIIIIil1iii1I1l, lIl11l1lIliIlii1liI1I) local i1lilII111ill1Il111, il1iii1l1i1lIillIlI = 7, 35 local IIllII1iilI11iliiiI = iIIil1iI1l11Il111Il[101693] local I1iiI1IlilIllIIiiil = lIllIiIIlIii1I1IIIiil({}, { __index = function(l11Il1I11Il1IliiiI1, i1IiI1iI1111llI1iI1) local i1l11IiIlIlIllili1l = iIIil1iI1l11Il111Il[82729][i1IiI1iI1111llI1iI1] if iiIIli11I1i1Ill1Ili(Iilli1iIliii11iilli(i1l11IiIlIlIllili1l[92726]), 1, 1) == "s" then return { [92726] = iiIIli11I1i1Ill1Ili(i1l11IiIlIlIllili1l[92726], 5) } end return i1l11IiIlIlIllili1l end }) local lIlIIili1lI1i111iIIil = 114559 local IiIiI1IIl1IiiiII1II = iIIil1iI1l11Il111Il[118730] local lIlIlIII1l11lillIiill = 92726 local lI1i1iIlillIi1I1i1l = iIIil1iI1l11Il111Il[76236] local llilllIlIllIilI1iil = 105359 local IilIl11iIlI1lIIlllI = iIIil1iI1l11Il111Il[102] local lIl11IillIilll1I1Ili1 = 60801 local function liI1IIliIl1lIi1l1ii(...) local lI1il1Il1ilI1l1Ilil = 0 local lIlIlI1lIiIlilllIiIli = { lIliliiiIi1111lIlii1I({}, 1, iIIil1iI1l11Il111Il[86294]) } local II1iIlIl1lII1IlliIi = 1 local IiIlliliIl11IIiiili = {} local llliIili1I1iII1lIi1 = {} local i1iiilliii1ill1iI1I = 1 local lIll1IlIIIIil1iii1I1l = ll1i1iiiiII1llIllll() local I111iiliili1l1IliIi = { ... } local l1iiiIIlI1lli1illi1 = #I111iiliili1l1IliIi - 1 for iIIiIl11iIl1IIl1i1I = 0, l1iiiIIlI1lli1illi1 do if iIIiIl11iIl1IIl1i1I < lI1i1iIlillIi1I1i1l then lIlIlI1lIiIlilllIiIli[iIIiIl11iIl1IIl1i1I] = I111iiliili1l1IliIi[iIIiIl11iIl1IIl1i1I + 1] end end local function iIii1liIIIIlilIlliI(...) local i1ll1IIiIIl1lliI1li = lIiIiiI1llilIlIlili("#", ...) local l11Il1I11Il1IliiiI1 = { ... } return i1ll1IIiIIl1lliI1li, l11Il1I11Il1IliiiI1 end local lIlI11li1li111i11lill = #{ 3931, 4621, 164, 4004, 1432, 547, 253, 882, 1981, 2474, 5019, 2717, 607, 3198, 5723, 3105, 3967, 1274, 3549, 6691, 4943, 4066, 346, 4807 } + 131047 local iiIIiliiIilili1Il1i local IiIi1lIi1llilil11I1 = { function(illI1lililIl1Il11lI, li1ilIII1iiI1iill11) local i1ii1I1i11iI1l1il1l = illI1lililIl1Il11lI[6495] - lIlI11li1li111i11lill local iI1lIiIliIi1ll1iIli = illI1lililIl1Il11lI[60801] local lIlll111Iiiiililii1ll = illI1lililIl1Il11lI[58323] local lIliIIIi1iI1Iil1l1l11 = illI1lililIl1Il11lI[6495] local lIlI1Il1iiiiIiIi11I1l = illI1lililIl1Il11lI[44873] local Ill1IIl1l1iIiIlIl1l, Ii1ill111lI1llii1Il, lI1Iiliil1i1liiIll1 if iI1lIiIliIi1ll1iIli ~= 1 then if iI1lIiIliIi1ll1iIli ~= 0 then Ii1ill111lI1llii1Il = lIlI1Il1iiiiIiIi11I1l + iI1lIiIliIi1ll1iIli - 1 else Ii1ill111lI1llii1Il = lI1il1Il1ilI1l1Ilil end Ii1ill111lI1llii1Il, Ill1IIl1l1iIiIlIl1l = iIii1liIIIIlilIlliI(lIlIlI1lIiIlilllIiIli[lIlI1Il1iiiiIiIi11I1l](lIliliiiIi1111lIlii1I(lIlIlI1lIiIlilllIiIli, lIlI1Il1iiiiIiIi11I1l + 1, Ii1ill111lI1llii1Il))) else Ii1ill111lI1llii1Il, Ill1IIl1l1iIiIlIl1l = iIii1liIIIIlilIlliI(lIlIlI1lIiIlilllIiIli[lIlI1Il1iiiiIiIi11I1l]()) end if lIlll111Iiiiililii1ll ~= 1 then if lIlll111Iiiiililii1ll ~= 0 then Ii1ill111lI1llii1Il = lIlI1Il1iiiiIiIi11I1l + lIlll111Iiiiililii1ll - 2 else Ii1ill111lI1llii1Il = Ii1ill111lI1llii1Il + lIlI1Il1iiiiIiIi11I1l end lI1Iiliil1i1liiIll1 = 0 for iIIiIl11iIl1IIl1i1I = lIlI1Il1iiiiIiIi11I1l, Ii1ill111lI1llii1Il do lI1Iiliil1i1liiIll1 = lI1Iiliil1i1liiIll1 + 1 lIlIlI1lIiIlilllIiIli[iIIiIl11iIl1IIl1i1I] = Ill1IIl1l1iIiIlIl1l[lI1Iiliil1i1liiIll1] end end lI1il1Il1ilI1l1Ilil = Ii1ill111lI1llii1Il - 1 end, nil, function(illI1lililIl1Il11lI, li1ilIII1iiI1iill11) local i1ii1I1i11iI1l1il1l = illI1lililIl1Il11lI[6495] - lIlI11li1li111i11lill local lIliIIIi1iI1Iil1l1l11 = illI1lililIl1Il11lI[6495] local lIlI1Il1iiiiIiIi11I1l = illI1lililIl1Il11lI[44873] local iI1lIiIliIi1ll1iIli = illI1lililIl1Il11lI[60801] local lIlll111Iiiiililii1ll = illI1lililIl1Il11lI[58323] local li11I1l1li11l1iIlI1 if lIliIIIi1iI1Iil1l1l11 == 100000 then li11I1l1li11l1iIlI1 = lIlIlI1lIiIlilllIiIli[251] else li11I1l1li11l1iIlI1 = I1iiI1IlilIllIIiiil[lIliIIIi1iI1Iil1l1l11][lIlIlIII1l11lillIiill] end lIlIlI1lIiIlilllIiIli[lIlI1Il1iiiiIiIi11I1l] = lIll1IlIIIIil1iii1I1l[li11I1l1li11l1iIlI1] end, function(illI1lililIl1Il11lI, li1ilIII1iiI1iill11, i1lI111llIIlIlII1Il) local iI1lIiIliIi1ll1iIli = illI1lililIl1Il11lI[60801] local lIliIIIi1iI1Iil1l1l11 = illI1lililIl1Il11lI[6495] local i1ii1I1i11iI1l1il1l = illI1lililIl1Il11lI[6495] - lIlI11li1li111i11lill local lIlll111Iiiiililii1ll = illI1lililIl1Il11lI[58323] local lIlI1Il1iiiiIiIi11I1l = illI1lililIl1Il11lI[44873] if iI1lIiIliIi1ll1iIli == 91 then return iiIIiliiIilili1Il1i[23]({ [44873] = (lIlI1Il1iiiiIiIi11I1l - 231) % 256, [60801] = (lIlll111Iiiiililii1ll - 231) % 256, [6495] = 0 }) end local liI1iliiiIi11II1lIi = lIlI1Il1iiiiIiIi11I1l + 2 local Il1iiii1lIIilill1il = { lIlIlI1lIiIlilllIiIli[lIlI1Il1iiiiIiIi11I1l](lIlIlI1lIiIlilllIiIli[lIlI1Il1iiiiIiIi11I1l + 1], lIlIlI1lIiIlilllIiIli[lIlI1Il1iiiiIiIi11I1l + 2]) } for iIIiIl11iIl1IIl1i1I = 1, lIlll111Iiiiililii1ll do lIlIlI1lIiIlilllIiIli[liI1iliiiIi11II1lIi + iIIiIl11iIl1IIl1i1I] = Il1iiii1lIIilill1il[iIIiIl11iIl1IIl1i1I] end if lIlIlI1lIiIlilllIiIli[lIlI1Il1iiiiIiIi11I1l + 3] ~= nil then lIlIlI1lIiIlilllIiIli[lIlI1Il1iiiiIiIi11I1l + 2] = lIlIlI1lIiIlilllIiIli[lIlI1Il1iiiiIiIi11I1l + 3] else II1iIlIl1lII1IlliIi = II1iIlIl1lII1IlliIi + 1 end end, nil, function(illI1lililIl1Il11lI, li1ilIII1iiI1iill11, i1lI111llIIlIlII1Il, lIlIllliiIlilIi11IiIl) local lIlll111Iiiiililii1ll = illI1lililIl1Il11lI[58323] local lIliIIIi1iI1Iil1l1l11 = illI1lililIl1Il11lI[6495] local iI1lIiIliIi1ll1iIli = illI1lililIl1Il11lI[60801] local i1ii1I1i11iI1l1il1l = illI1lililIl1Il11lI[6495] - lIlI11li1li111i11lill local lIlI1Il1iiiiIiIi11I1l = illI1lililIl1Il11lI[44873] if iI1lIiIliIi1ll1iIli > 255 then iI1lIiIliIi1ll1iIli = I1iiI1IlilIllIIiiil[iI1lIiIliIi1ll1iIli - 256][lIlIlIII1l11lillIiill] else iI1lIiIliIi1ll1iIli = lIlIlI1lIiIlilllIiIli[iI1lIiIliIi1ll1iIli] end if lIlll111Iiiiililii1ll > 255 then lIlll111Iiiiililii1ll = I1iiI1IlilIllIIiiil[lIlll111Iiiiililii1ll - 256][lIlIlIII1l11lillIiill] else lIlll111Iiiiililii1ll = lIlIlI1lIiIlilllIiIli[lIlll111Iiiiililii1ll] end if iI1lIiIliIi1ll1iIli < lIlll111Iiiiililii1ll ~= (lIlI1Il1iiiiIiIi11I1l ~= 0) then II1iIlIl1lII1IlliIi = II1iIlIl1lII1IlliIi + 1 end end, nil, function(illI1lililIl1Il11lI, li1ilIII1iiI1iill11, i1lI111llIIlIlII1Il) local lIlI1Il1iiiiIiIi11I1l = illI1lililIl1Il11lI[44873] local iI1lIiIliIi1ll1iIli = illI1lililIl1Il11lI[60801] local lIliIIIi1iI1Iil1l1l11 = illI1lililIl1Il11lI[6495] local lIlll111Iiiiililii1ll = illI1lililIl1Il11lI[58323] local i1ii1I1i11iI1l1il1l = illI1lililIl1Il11lI[6495] - lIlI11li1li111i11lill if iI1lIiIliIi1ll1iIli > 255 then iI1lIiIliIi1ll1iIli = I1iiI1IlilIllIIiiil[iI1lIiIliIi1ll1iIli - 256][lIlIlIII1l11lillIiill] else iI1lIiIliIi1ll1iIli = lIlIlI1lIiIlilllIiIli[iI1lIiIliIi1ll1iIli] end if lIlll111Iiiiililii1ll > 255 then lIlll111Iiiiililii1ll = I1iiI1IlilIllIIiiil[lIlll111Iiiiililii1ll - 256][lIlIlIII1l11lillIiill] else lIlll111Iiiiililii1ll = lIlIlI1lIiIlilllIiIli[lIlll111Iiiiililii1ll] end if iI1lIiIliIi1ll1iIli <= lIlll111Iiiiililii1ll ~= (lIlI1Il1iiiiIiIi11I1l ~= 0) then II1iIlIl1lII1IlliIi = II1iIlIl1lII1IlliIi + 1 end end, function(illI1lililIl1Il11lI, li1ilIII1iiI1iill11, i1lI111llIIlIlII1Il) local lIlI1Il1iiiiIiIi11I1l = illI1lililIl1Il11lI[44873] local iI1lIiIliIi1ll1iIli = illI1lililIl1Il11lI[60801] local lIlll111Iiiiililii1ll = illI1lililIl1Il11lI[58323] local lIliIIIi1iI1Iil1l1l11 = illI1lililIl1Il11lI[6495] local i1ii1I1i11iI1l1il1l = illI1lililIl1Il11lI[6495] - lIlI11li1li111i11lill lIlIlI1lIiIlilllIiIli[lIlI1Il1iiiiIiIi11I1l] = { lIliliiiIi1111lIlii1I(IillIIii1iiI1I1l111, 1, iI1lIiIliIi1ll1iIli == 0 and 895 or iI1lIiIliIi1ll1iIli) } end, function(illI1lililIl1Il11lI, li1ilIII1iiI1iill11) local lIlll111Iiiiililii1ll = illI1lililIl1Il11lI[58323] local lIlI1Il1iiiiIiIi11I1l = illI1lililIl1Il11lI[44873] local lIliIIIi1iI1Iil1l1l11 = illI1lililIl1Il11lI[6495] local i1ii1I1i11iI1l1il1l = illI1lililIl1Il11lI[6495] - lIlI11li1li111i11lill local iI1lIiIliIi1ll1iIli = illI1lililIl1Il11lI[60801] if iI1lIiIliIi1ll1iIli > 255 then iI1lIiIliIi1ll1iIli = I1iiI1IlilIllIIiiil[iI1lIiIliIi1ll1iIli - 256][lIlIlIII1l11lillIiill] else iI1lIiIliIi1ll1iIli = lIlIlI1lIiIlilllIiIli[iI1lIiIliIi1ll1iIli] end if lIlll111Iiiiililii1ll > 255 then lIlll111Iiiiililii1ll = I1iiI1IlilIllIIiiil[lIlll111Iiiiililii1ll - 256][lIlIlIII1l11lillIiill] else lIlll111Iiiiililii1ll = lIlIlI1lIiIlilllIiIli[lIlll111Iiiiililii1ll] end lIlIlI1lIiIlilllIiIli[lIlI1Il1iiiiIiIi11I1l][iI1lIiIliIi1ll1iIli] = lIlll111Iiiiililii1ll end, function(illI1lililIl1Il11lI) local i1ii1I1i11iI1l1il1l = illI1lililIl1Il11lI[6495] - lIlI11li1li111i11lill local iI1lIiIliIi1ll1iIli = illI1lililIl1Il11lI[60801] local lIlI1Il1iiiiIiIi11I1l = illI1lililIl1Il11lI[44873] local lIlll111Iiiiililii1ll = illI1lililIl1Il11lI[58323] local lIliIIIi1iI1Iil1l1l11 = illI1lililIl1Il11lI[6495] if not not lIlIlI1lIiIlilllIiIli[iI1lIiIliIi1ll1iIli] == (lIlll111Iiiiililii1ll == 0) then II1iIlIl1lII1IlliIi = II1iIlIl1lII1IlliIi + 1 else lIlIlI1lIiIlilllIiIli[lIlI1Il1iiiiIiIi11I1l] = lIlIlI1lIiIlilllIiIli[iI1lIiIliIi1ll1iIli] end end, function(illI1lililIl1Il11lI, li1ilIII1iiI1iill11, i1lI111llIIlIlII1Il, lIlIllliiIlilIi11IiIl) local lIlI1Il1iiiiIiIi11I1l = illI1lililIl1Il11lI[44873] local lIlll111Iiiiililii1ll = illI1lililIl1Il11lI[58323] local i1ii1I1i11iI1l1il1l = illI1lililIl1Il11lI[6495] - lIlI11li1li111i11lill local lIliIIIi1iI1Iil1l1l11 = illI1lililIl1Il11lI[6495] local iI1lIiIliIi1ll1iIli = illI1lililIl1Il11lI[60801] if lIlll111Iiiiililii1ll == 128 then return iiIIiliiIilili1Il1i[9]({ [44873] = (lIlI1Il1iiiiIiIi11I1l - 93) % 256, [60801] = (iI1lIiIliIi1ll1iIli - 93) % 256, [6495] = 0 }) end for iIIiIl11iIl1IIl1i1I = lIlI1Il1iiiiIiIi11I1l, iI1lIiIliIi1ll1iIli do lIlIlI1lIiIlilllIiIli[iIIiIl11iIl1IIl1i1I] = nil end end, function(illI1lililIl1Il11lI, li1ilIII1iiI1iill11) local iI1lIiIliIi1ll1iIli = illI1lililIl1Il11lI[60801] local lIlll111Iiiiililii1ll = illI1lililIl1Il11lI[58323] local lIlI1Il1iiiiIiIi11I1l = illI1lililIl1Il11lI[44873] local i1ii1I1i11iI1l1il1l = illI1lililIl1Il11lI[6495] - lIlI11li1li111i11lill local lIliIIIi1iI1Iil1l1l11 = illI1lililIl1Il11lI[6495] for iIIiIl11iIl1IIl1i1I = lIlI1Il1iiiiIiIi11I1l, #lIlIlI1lIiIlilllIiIli do local il1ii11lI1I1iiIlIlI = i1iiilliii1ill1iI1I for Ii1ilil1lII111illIi, lIl1iIiiIl1IIill11i1l in next, IiIlliliIl11IIiiili, nil do for li11I1l1li11l1iIlI1, lIlllliIi1iI1IiI1IIl1 in next, lIl1iIiiIl1IIill11i1l, nil do if lIlIlI1lIiIlilllIiIli == lIlllliIi1iI1IiI1IIl1[1] and lIlllliIi1iI1IiI1IIl1[2] == iIIiIl11iIl1IIl1i1I then if not llliIili1I1iII1lIi1[il1ii11lI1I1iiIlIlI] then llliIili1I1iII1lIi1[il1ii11lI1I1iiIlIlI] = lIlIlI1lIiIlilllIiIli[iIIiIl11iIl1IIl1i1I] i1iiilliii1ill1iI1I = i1iiilliii1ill1iI1I + 1 end lIl1iIiiIl1IIill11i1l[li11I1l1li11l1iIlI1] = {llliIili1I1iII1lIi1, il1ii11lI1I1iiIlIlI} end end end end end, function(illI1lililIl1Il11lI, li1ilIII1iiI1iill11, i1lI111llIIlIlII1Il) local lIlI1Il1iiiiIiIi11I1l = illI1lililIl1Il11lI[44873] local lIlll111Iiiiililii1ll = illI1lililIl1Il11lI[58323] local iI1lIiIliIi1ll1iIli = illI1lililIl1Il11lI[60801] local i1ii1I1i11iI1l1il1l = illI1lililIl1Il11lI[6495] - lIlI11li1li111i11lill local lIliIIIi1iI1Iil1l1l11 = illI1lililIl1Il11lI[6495] if lIlll111Iiiiililii1ll == 219 then return iiIIiliiIilili1Il1i[8]({ [44873] = (lIlI1Il1iiiiIiIi11I1l - 1) % 256, [60801] = (iI1lIiIliIi1ll1iIli - 1) % 256, [6495] = 0 }) end if lIlll111Iiiiililii1ll == 100 then return iiIIiliiIilili1Il1i[13]({ [44873] = (lIlI1Il1iiiiIiIi11I1l - 247) % 256, [60801] = (iI1lIiIliIi1ll1iIli - 247) % 256, [6495] = 0 }) end if lIlll111Iiiiililii1ll == 210 then return iiIIiliiIilili1Il1i[18]({ [44873] = (lIlI1Il1iiiiIiIi11I1l - 145) % 256, [58323] = (iI1lIiIliIi1ll1iIli - 145) % 256, [6495] = 0 }) end if lIlll111Iiiiililii1ll == 247 then return iiIIiliiIilili1Il1i[6]({ [44873] = (lIlI1Il1iiiiIiIi11I1l - 22) % 256, [60801] = (iI1lIiIliIi1ll1iIli - 22) % 256, [6495] = 0 }) end lIlIlI1lIiIlilllIiIli[lIlI1Il1iiiiIiIi11I1l] = lIl11l1lIliIlii1liI1I[iI1lIiIliIi1ll1iIli] end, nil, function(illI1lililIl1Il11lI, li1ilIII1iiI1iill11, i1lI111llIIlIlII1Il) local i1ii1I1i11iI1l1il1l = illI1lililIl1Il11lI[6495] - lIlI11li1li111i11lill local lIliIIIi1iI1Iil1l1l11 = illI1lililIl1Il11lI[6495] local iI1lIiIliIi1ll1iIli = illI1lililIl1Il11lI[60801] local lIlI1Il1iiiiIiIi11I1l = illI1lililIl1Il11lI[44873] local lIlll111Iiiiililii1ll = illI1lililIl1Il11lI[58323] local Il1iiii1lIIilill1il = lIlIlI1lIiIlilllIiIli[iI1lIiIliIi1ll1iIli] for iIIiIl11iIl1IIl1i1I = iI1lIiIliIi1ll1iIli + 1, lIlll111Iiiiililii1ll do Il1iiii1lIIilill1il = Il1iiii1lIIilill1il .. lIlIlI1lIiIlilllIiIli[iIIiIl11iIl1IIl1i1I] end lIlIlI1lIiIlilllIiIli[lIlI1Il1iiiiIiIi11I1l] = Il1iiii1lIIilill1il end, nil, nil, nil, function(illI1lililIl1Il11lI) local iI1lIiIliIi1ll1iIli = illI1lililIl1Il11lI[60801] local i1ii1I1i11iI1l1il1l = illI1lililIl1Il11lI[6495] - lIlI11li1li111i11lill local lIliIIIi1iI1Iil1l1l11 = illI1lililIl1Il11lI[6495] local lIlI1Il1iiiiIiIi11I1l = illI1lililIl1Il11lI[44873] local lIlll111Iiiiililii1ll = illI1lililIl1Il11lI[58323] lIlIlI1lIiIlilllIiIli[lIlI1Il1iiiiIiIi11I1l] = i1IlIil1IlllliIll1i(lIll111ill1liI1Ililil(lIlIlI1lIiIlilllIiIli[lIlI1Il1iiiiIiIi11I1l]), "`for` initial value must be a number") lIlIlI1lIiIlilllIiIli[lIlI1Il1iiiiIiIi11I1l + 1] = i1IlIil1IlllliIll1i(lIll111ill1liI1Ililil(lIlIlI1lIiIlilllIiIli[lIlI1Il1iiiiIiIi11I1l + 1]), "`for` limit value must be a number") lIlIlI1lIiIlilllIiIli[lIlI1Il1iiiiIiIi11I1l + 2] = i1IlIil1IlllliIll1i(lIll111ill1liI1Ililil(lIlIlI1lIiIlilllIiIli[lIlI1Il1iiiiIiIi11I1l + 2]), "`for` step value must be a number") lIlIlI1lIiIlilllIiIli[lIlI1Il1iiiiIiIi11I1l] = lIlIlI1lIiIlilllIiIli[lIlI1Il1iiiiIiIi11I1l] - lIlIlI1lIiIlilllIiIli[lIlI1Il1iiiiIiIi11I1l + 2] II1iIlIl1lII1IlliIi = II1iIlIl1lII1IlliIi + i1ii1I1i11iI1l1il1l end, nil, function(illI1lililIl1Il11lI, li1ilIII1iiI1iill11, i1lI111llIIlIlII1Il) local lIlll111Iiiiililii1ll = illI1lililIl1Il11lI[58323] local lIlI1Il1iiiiIiIi11I1l = illI1lililIl1Il11lI[44873] local lIliIIIi1iI1Iil1l1l11 = illI1lililIl1Il11lI[6495] local i1ii1I1i11iI1l1il1l = illI1lililIl1Il11lI[6495] - lIlI11li1li111i11lill local iI1lIiIliIi1ll1iIli = illI1lililIl1Il11lI[60801] if lIlll111Iiiiililii1ll == 225 then return iiIIiliiIilili1Il1i[12]({ [44873] = (lIlI1Il1iiiiIiIi11I1l - 201) % 256, [60801] = (iI1lIiIliIi1ll1iIli - 201) % 256, [6495] = 0 }) end local llliIlilililII11ilI = iI1lIiIliIi1ll1iIli > 0 and iI1lIiIliIi1ll1iIli - 1 or l1iiiIIlI1lli1illi1 - lI1i1iIlillIi1I1i1l if llliIlilililII11ilI < 0 then llliIlilililII11ilI = -1 end for iIIiIl11iIl1IIl1i1I = lIlI1Il1iiiiIiIi11I1l, lIlI1Il1iiiiIiIi11I1l + llliIlilililII11ilI do lIlIlI1lIiIlilllIiIli[iIIiIl11iIl1IIl1i1I] = I111iiliili1l1IliIi[lI1i1iIlillIi1I1i1l + (iIIiIl11iIl1IIl1i1I - lIlI1Il1iiiiIiIi11I1l) + 1] end lI1il1Il1ilI1l1Ilil = lIlI1Il1iiiiIiIi11I1l + llliIlilililII11ilI end, function(illI1lililIl1Il11lI, li1ilIII1iiI1iill11) local lIliIIIi1iI1Iil1l1l11 = illI1lililIl1Il11lI[6495] local iI1lIiIliIi1ll1iIli = illI1lililIl1Il11lI[60801] local lIlll111Iiiiililii1ll = illI1lililIl1Il11lI[58323] local lIlI1Il1iiiiIiIi11I1l = illI1lililIl1Il11lI[44873] local i1ii1I1i11iI1l1il1l = illI1lililIl1Il11lI[6495] - lIlI11li1li111i11lill if iI1lIiIliIi1ll1iIli > 255 then iI1lIiIliIi1ll1iIli = I1iiI1IlilIllIIiiil[iI1lIiIliIi1ll1iIli - 256][lIlIlIII1l11lillIiill] else iI1lIiIliIi1ll1iIli = lIlIlI1lIiIlilllIiIli[iI1lIiIliIi1ll1iIli] end if lIlll111Iiiiililii1ll > 255 then lIlll111Iiiiililii1ll = I1iiI1IlilIllIIiiil[lIlll111Iiiiililii1ll - 256][lIlIlIII1l11lillIiill] else lIlll111Iiiiililii1ll = lIlIlI1lIiIlilllIiIli[lIlll111Iiiiililii1ll] end lIlIlI1lIiIlilllIiIli[lIlI1Il1iiiiIiIi11I1l] = iI1lIiIliIi1ll1iIli - lIlll111Iiiiililii1ll end, nil, nil, nil, function(illI1lililIl1Il11lI, li1ilIII1iiI1iill11) local lIlll111Iiiiililii1ll = illI1lililIl1Il11lI[58323] local i1ii1I1i11iI1l1il1l = illI1lililIl1Il11lI[6495] - lIlI11li1li111i11lill local lIlI1Il1iiiiIiIi11I1l = illI1lililIl1Il11lI[44873] local lIliIIIi1iI1Iil1l1l11 = illI1lililIl1Il11lI[6495] local iI1lIiIliIi1ll1iIli = illI1lililIl1Il11lI[60801] lIlIlI1lIiIlilllIiIli[lIlI1Il1iiiiIiIi11I1l] = #lIlIlI1lIiIlilllIiIli[iI1lIiIliIi1ll1iIli] end, nil, nil, function(illI1lililIl1Il11lI, li1ilIII1iiI1iill11) local lIlll111Iiiiililii1ll = illI1lililIl1Il11lI[58323] local i1ii1I1i11iI1l1il1l = illI1lililIl1Il11lI[6495] - lIlI11li1li111i11lill local lIliIIIi1iI1Iil1l1l11 = illI1lililIl1Il11lI[6495] local iI1lIiIliIi1ll1iIli = illI1lililIl1Il11lI[60801] local lIlI1Il1iiiiIiIi11I1l = illI1lililIl1Il11lI[44873] if lIlll111Iiiiililii1ll == 172 then return iiIIiliiIilili1Il1i[37]({ [44873] = (lIlI1Il1iiiiIiIi11I1l - 174) % 256, [60801] = (iI1lIiIliIi1ll1iIli - 174) % 256, [6495] = 0 }) end lIlIlI1lIiIlilllIiIli[lIlI1Il1iiiiIiIi11I1l] = not lIlIlI1lIiIlilllIiIli[iI1lIiIliIi1ll1iIli] end, function(illI1lililIl1Il11lI, li1ilIII1iiI1iill11, i1lI111llIIlIlII1Il, lIlIllliiIlilIi11IiIl, Illiil1l11lliiIlIIl) local i1ii1I1i11iI1l1il1l = illI1lililIl1Il11lI[6495] - lIlI11li1li111i11lill local iI1lIiIliIi1ll1iIli = illI1lililIl1Il11lI[60801] local lIlI1Il1iiiiIiIi11I1l = illI1lililIl1Il11lI[44873] local lIlll111Iiiiililii1ll = illI1lililIl1Il11lI[58323] local lIliIIIi1iI1Iil1l1l11 = illI1lililIl1Il11lI[6495] if iI1lIiIliIi1ll1iIli > 255 then iI1lIiIliIi1ll1iIli = I1iiI1IlilIllIIiiil[iI1lIiIliIi1ll1iIli - 256][lIlIlIII1l11lillIiill] else iI1lIiIliIi1ll1iIli = lIlIlI1lIiIlilllIiIli[iI1lIiIliIi1ll1iIli] end if lIlll111Iiiiililii1ll > 255 then lIlll111Iiiiililii1ll = I1iiI1IlilIllIIiiil[lIlll111Iiiiililii1ll - 256][lIlIlIII1l11lillIiill] else lIlll111Iiiiililii1ll = lIlIlI1lIiIlilllIiIli[lIlll111Iiiiililii1ll] end lIlIlI1lIiIlilllIiIli[lIlI1Il1iiiiIiIi11I1l] = iI1lIiIliIi1ll1iIli + lIlll111Iiiiililii1ll end, nil, function(illI1lililIl1Il11lI, li1ilIII1iiI1iill11, i1lI111llIIlIlII1Il) local lIlI1Il1iiiiIiIi11I1l = illI1lililIl1Il11lI[44873] local lIliIIIi1iI1Iil1l1l11 = illI1lililIl1Il11lI[6495] local iI1lIiIliIi1ll1iIli = illI1lililIl1Il11lI[60801] local i1ii1I1i11iI1l1il1l = illI1lililIl1Il11lI[6495] - lIlI11li1li111i11lill local lIlll111Iiiiililii1ll = illI1lililIl1Il11lI[58323] II1iIlIl1lII1IlliIi = II1iIlIl1lII1IlliIi + i1ii1I1i11iI1l1il1l end, nil, function(illI1lililIl1Il11lI, li1ilIII1iiI1iill11, i1lI111llIIlIlII1Il, lIlIllliiIlilIi11IiIl, Illiil1l11lliiIlIIl, l1IIIIlI111ll11l11I) local i1ii1I1i11iI1l1il1l = illI1lililIl1Il11lI[6495] - lIlI11li1li111i11lill local lIlI1Il1iiiiIiIi11I1l = illI1lililIl1Il11lI[44873] local lIlll111Iiiiililii1ll = illI1lililIl1Il11lI[58323] local lIliIIIi1iI1Iil1l1l11 = illI1lililIl1Il11lI[6495] local iI1lIiIliIi1ll1iIli = illI1lililIl1Il11lI[60801] local li11I1l1li11l1iIlI1 if lIliIIIi1iI1Iil1l1l11 == 100000 then li11I1l1li11l1iIlI1 = lIlIlI1lIiIlilllIiIli[251] else li11I1l1li11l1iIlI1 = I1iiI1IlilIllIIiiil[lIliIIIi1iI1Iil1l1l11][lIlIlIII1l11lillIiill] end lIll1IlIIIIil1iii1I1l[li11I1l1li11l1iIlI1] = lIlIlI1lIiIlilllIiIli[lIlI1Il1iiiiIiIi11I1l] end, nil, nil } IiIi1lIi1llilil11I1[25] = function(illI1lililIl1Il11lI, li1ilIII1iiI1iill11, i1lI111llIIlIlII1Il) local iI1lIiIliIi1ll1iIli = illI1lililIl1Il11lI[60801] local i1ii1I1i11iI1l1il1l = illI1lililIl1Il11lI[6495] - lIlI11li1li111i11lill local lIlI1Il1iiiiIiIi11I1l = illI1lililIl1Il11lI[44873] local lIliIIIi1iI1Iil1l1l11 = illI1lililIl1Il11lI[6495] local lIlll111Iiiiililii1ll = illI1lililIl1Il11lI[58323] if iI1lIiIliIi1ll1iIli > 255 then iI1lIiIliIi1ll1iIli = I1iiI1IlilIllIIiiil[iI1lIiIliIi1ll1iIli - 256][lIlIlIII1l11lillIiill] else iI1lIiIliIi1ll1iIli = lIlIlI1lIiIlilllIiIli[iI1lIiIliIi1ll1iIli] end if lIlll111Iiiiililii1ll > 255 then lIlll111Iiiiililii1ll = I1iiI1IlilIllIIiiil[lIlll111Iiiiililii1ll - 256][lIlIlIII1l11lillIiill] else lIlll111Iiiiililii1ll = lIlIlI1lIiIlilllIiIli[lIlll111Iiiiililii1ll] end if iI1lIiIliIi1ll1iIli == lIlll111Iiiiililii1ll ~= (lIlI1Il1iiiiIiIi11I1l ~= 0) then II1iIlIl1lII1IlliIi = II1iIlIl1lII1IlliIi + 1 end end IiIi1lIi1llilil11I1[19] = function(illI1lililIl1Il11lI, li1ilIII1iiI1iill11, i1lI111llIIlIlII1Il, lIlIllliiIlilIi11IiIl) local i1ii1I1i11iI1l1il1l = illI1lililIl1Il11lI[6495] - lIlI11li1li111i11lill local lIliIIIi1iI1Iil1l1l11 = illI1lililIl1Il11lI[6495] local lIlI1Il1iiiiIiIi11I1l = illI1lililIl1Il11lI[44873] local lIlll111Iiiiililii1ll = illI1lililIl1Il11lI[58323] local iI1lIiIliIi1ll1iIli = illI1lililIl1Il11lI[60801] local lIlIiiliiiIi111l1l1lI = lIlIlI1lIiIlilllIiIli[lIlI1Il1iiiiIiIi11I1l + 2] local IiiI1lili1iiIIIi11i = lIlIlI1lIiIlilllIiIli[lIlI1Il1iiiiIiIi11I1l] + lIlIiiliiiIi111l1l1lI lIlIlI1lIiIlilllIiIli[lIlI1Il1iiiiIiIi11I1l] = IiiI1lili1iiIIIi11i if lIlIiiliiiIi111l1l1lI > 0 then if IiiI1lili1iiIIIi11i <= lIlIlI1lIiIlilllIiIli[lIlI1Il1iiiiIiIi11I1l + 1] then II1iIlIl1lII1IlliIi = II1iIlIl1lII1IlliIi + i1ii1I1i11iI1l1il1l lIlIlI1lIiIlilllIiIli[lIlI1Il1iiiiIiIi11I1l + 3] = IiiI1lili1iiIIIi11i end elseif IiiI1lili1iiIIIi11i >= lIlIlI1lIiIlilllIiIli[lIlI1Il1iiiiIiIi11I1l + 1] then II1iIlIl1lII1IlliIi = II1iIlIl1lII1IlliIi + i1ii1I1i11iI1l1il1l lIlIlI1lIiIlilllIiIli[lIlI1Il1iiiiIiIi11I1l + 3] = IiiI1lili1iiIIIi11i end end IiIi1lIi1llilil11I1[24] = function(illI1lililIl1Il11lI, li1ilIII1iiI1iill11) local lIlI1Il1iiiiIiIi11I1l = illI1lililIl1Il11lI[44873] local i1ii1I1i11iI1l1il1l = illI1lililIl1Il11lI[6495] - lIlI11li1li111i11lill local iI1lIiIliIi1ll1iIli = illI1lililIl1Il11lI[60801] local lIlll111Iiiiililii1ll = illI1lililIl1Il11lI[58323] local lIliIIIi1iI1Iil1l1l11 = illI1lililIl1Il11lI[6495] if not not lIlIlI1lIiIlilllIiIli[lIlI1Il1iiiiIiIi11I1l] == (lIlll111Iiiiililii1ll == 0) then II1iIlIl1lII1IlliIi = II1iIlIl1lII1IlliIi + 1 end end IiIi1lIi1llilil11I1[15] = function(illI1lililIl1Il11lI, li1ilIII1iiI1iill11, i1lI111llIIlIlII1Il) local lIlI1Il1iiiiIiIi11I1l = illI1lililIl1Il11lI[44873] local lIliIIIi1iI1Iil1l1l11 = illI1lililIl1Il11lI[6495] local i1ii1I1i11iI1l1il1l = illI1lililIl1Il11lI[6495] - lIlI11li1li111i11lill local iI1lIiIliIi1ll1iIli = illI1lililIl1Il11lI[60801] local lIlll111Iiiiililii1ll = illI1lililIl1Il11lI[58323] if lIlll111Iiiiililii1ll == 66 then return iiIIiliiIilili1Il1i[36]({ [44873] = (lIlI1Il1iiiiIiIi11I1l - 4) % 256, [60801] = (iI1lIiIliIi1ll1iIli - 4) % 256, [6495] = 0 }) end if lIlll111Iiiiililii1ll == 243 then return iiIIiliiIilili1Il1i[7]({ [44873] = (lIlI1Il1iiiiIiIi11I1l - 225) % 256, [60801] = (iI1lIiIliIi1ll1iIli - 225) % 256, [6495] = 0 }) end lIl11l1lIliIlii1liI1I[iI1lIiIliIi1ll1iIli] = lIlIlI1lIiIlilllIiIli[lIlI1Il1iiiiIiIi11I1l] end IiIi1lIi1llilil11I1[26] = function(illI1lililIl1Il11lI, li1ilIII1iiI1iill11, i1lI111llIIlIlII1Il, lIlIllliiIlilIi11IiIl) local lIlll111Iiiiililii1ll = illI1lililIl1Il11lI[58323] local lIlI1Il1iiiiIiIi11I1l = illI1lililIl1Il11lI[44873] local i1ii1I1i11iI1l1il1l = illI1lililIl1Il11lI[6495] - lIlI11li1li111i11lill local lIliIIIi1iI1Iil1l1l11 = illI1lililIl1Il11lI[6495] local iI1lIiIliIi1ll1iIli = illI1lililIl1Il11lI[60801] if iI1lIiIliIi1ll1iIli > 255 then iI1lIiIliIi1ll1iIli = I1iiI1IlilIllIIiiil[iI1lIiIliIi1ll1iIli - 256][lIlIlIII1l11lillIiill] else iI1lIiIliIi1ll1iIli = lIlIlI1lIiIlilllIiIli[iI1lIiIliIi1ll1iIli] end if lIlll111Iiiiililii1ll > 255 then lIlll111Iiiiililii1ll = I1iiI1IlilIllIIiiil[lIlll111Iiiiililii1ll - 256][lIlIlIII1l11lillIiill] else lIlll111Iiiiililii1ll = lIlIlI1lIiIlilllIiIli[lIlll111Iiiiililii1ll] end lIlIlI1lIiIlilllIiIli[lIlI1Il1iiiiIiIi11I1l] = iI1lIiIliIi1ll1iIli % lIlll111Iiiiililii1ll end IiIi1lIi1llilil11I1[7] = function(illI1lililIl1Il11lI, li1ilIII1iiI1iill11, i1lI111llIIlIlII1Il) local lIlI1Il1iiiiIiIi11I1l = illI1lililIl1Il11lI[44873] local i1ii1I1i11iI1l1il1l = illI1lililIl1Il11lI[6495] - lIlI11li1li111i11lill local lIliIIIi1iI1Iil1l1l11 = illI1lililIl1Il11lI[6495] local iI1lIiIliIi1ll1iIli = illI1lililIl1Il11lI[60801] local lIlll111Iiiiililii1ll = illI1lililIl1Il11lI[58323] iI1lIiIliIi1ll1iIli = lIlIlI1lIiIlilllIiIli[iI1lIiIliIi1ll1iIli] if lIlll111Iiiiililii1ll > 255 then lIlll111Iiiiililii1ll = I1iiI1IlilIllIIiiil[lIlll111Iiiiililii1ll - 256][lIlIlIII1l11lillIiill] else lIlll111Iiiiililii1ll = lIlIlI1lIiIlilllIiIli[lIlll111Iiiiililii1ll] end lIlIlI1lIiIlilllIiIli[lIlI1Il1iiiiIiIi11I1l + 1] = iI1lIiIliIi1ll1iIli lIlIlI1lIiIlilllIiIli[lIlI1Il1iiiiIiIi11I1l] = iI1lIiIliIi1ll1iIli[lIlll111Iiiiililii1ll] end IiIi1lIi1llilil11I1[21] = function(illI1lililIl1Il11lI, li1ilIII1iiI1iill11) local lIlll111Iiiiililii1ll = illI1lililIl1Il11lI[58323] local i1ii1I1i11iI1l1il1l = illI1lililIl1Il11lI[6495] - lIlI11li1li111i11lill local lIlI1Il1iiiiIiIi11I1l = illI1lililIl1Il11lI[44873] local lIliIIIi1iI1Iil1l1l11 = illI1lililIl1Il11lI[6495] local iI1lIiIliIi1ll1iIli = illI1lililIl1Il11lI[60801] if lIlll111Iiiiililii1ll == 102 then return iiIIiliiIilili1Il1i[26]({ [44873] = (lIlI1Il1iiiiIiIi11I1l - 44) % 256, [60801] = (iI1lIiIliIi1ll1iIli - 44) % 256, [6495] = 0 }) end lIlIlI1lIiIlilllIiIli[lIlI1Il1iiiiIiIi11I1l] = -lIlIlI1lIiIlilllIiIli[iI1lIiIliIi1ll1iIli] end IiIi1lIi1llilil11I1[32] = function(illI1lililIl1Il11lI, li1ilIII1iiI1iill11) local i1ii1I1i11iI1l1il1l = illI1lililIl1Il11lI[6495] - lIlI11li1li111i11lill local lIlI1Il1iiiiIiIi11I1l = illI1lililIl1Il11lI[44873] local lIliIIIi1iI1Iil1l1l11 = illI1lililIl1Il11lI[6495] local iI1lIiIliIi1ll1iIli = illI1lililIl1Il11lI[60801] local lIlll111Iiiiililii1ll = illI1lililIl1Il11lI[58323] lIlIlI1lIiIlilllIiIli[lIlI1Il1iiiiIiIi11I1l] = iI1lIiIliIi1ll1iIli ~= 0 if lIlll111Iiiiililii1ll ~= 0 then II1iIlIl1lII1IlliIi = II1iIlIl1lII1IlliIi + 1 end end IiIi1lIi1llilil11I1[17] = function(illI1lililIl1Il11lI, li1ilIII1iiI1iill11, i1lI111llIIlIlII1Il) local iI1lIiIliIi1ll1iIli = illI1lililIl1Il11lI[60801] local i1ii1I1i11iI1l1il1l = illI1lililIl1Il11lI[6495] - lIlI11li1li111i11lill local lIlll111Iiiiililii1ll = illI1lililIl1Il11lI[58323] local lIlI1Il1iiiiIiIi11I1l = illI1lililIl1Il11lI[44873] local lIliIIIi1iI1Iil1l1l11 = illI1lililIl1Il11lI[6495] local lIl11Iii11illlilli1iI = IiIiI1IIl1IiiiII1II[lIliIIIi1iI1Iil1l1l11] local iliilIi1lll11i1IlI1 = {} if lIl11Iii11illlilli1iI[lIlIIili1lI1i111iIIil] > 0 then do local i1I1lI1lIiil111iIl1 = {} iliilIi1lll11i1IlI1 = lIllIiIIlIii1I1IIIiil({}, { __index = function(l11Il1I11Il1IliiiI1, i1IiI1iI1111llI1iI1) local lIlllliIi1iI1IiI1IIl1 = i1I1lI1lIiil111iIl1[i1IiI1iI1111llI1iI1] return lIlllliIi1iI1IiI1IIl1[1][lIlllliIi1iI1IiI1IIl1[2]] end, __newindex = function(l11Il1I11Il1IliiiI1, i1IiI1iI1111llI1iI1, iIiIliiillIiliiii11) local lIlllliIi1iI1IiI1IIl1 = i1I1lI1lIiil111iIl1[i1IiI1iI1111llI1iI1] lIlllliIi1iI1IiI1IIl1[1][lIlllliIi1iI1IiI1IIl1[2]] = iIiIliiillIiliiii11 end }) for iIIiIl11iIl1IIl1i1I = 1, lIl11Iii11illlilli1iI[lIlIIili1lI1i111iIIil] do local I1IIi1lIi1liIi1iilI = IIllII1iilI11iliiiI[II1iIlIl1lII1IlliIi] if I1IIi1lIi1liIi1iilI[llilllIlIllIilI1iil] == i1lilII111ill1Il111 then i1I1lI1lIiil111iIl1[iIIiIl11iIl1IIl1i1I - 1] = { lIlIlI1lIiIlilllIiIli, I1IIi1lIi1liIi1iilI[lIl11IillIilll1I1Ili1] } elseif I1IIi1lIi1liIi1iilI[llilllIlIllIilI1iil] == il1iii1l1i1lIillIlI then i1I1lI1lIiil111iIl1[iIIiIl11iIl1IIl1i1I - 1] = { lIl11l1lIliIlii1liI1I, I1IIi1lIi1liIi1iilI[lIl11IillIilll1I1Ili1] } end II1iIlIl1lII1IlliIi = II1iIlIl1lII1IlliIi + 1 end IiIlliliIl11IIiiili[#IiIlliliIl11IIiiili + 1] = i1I1lI1lIiil111iIl1 end end local IllI1i1Ii1iI1ll1l11 = il1ii1ilii11l1i1l1I(lIl11Iii11illlilli1iI, lIll1IlIIIIil1iii1I1l, iliilIi1lll11i1IlI1) lIlIlI1lIiIlilllIiIli[lIlI1Il1iiiiIiIi11I1l] = IllI1i1Ii1iI1ll1l11 end IiIi1lIi1llilil11I1[34] = function(illI1lililIl1Il11lI, li1ilIII1iiI1iill11) local lIliIIIi1iI1Iil1l1l11 = illI1lililIl1Il11lI[6495] local lIlll111Iiiiililii1ll = illI1lililIl1Il11lI[58323] local i1ii1I1i11iI1l1il1l = illI1lililIl1Il11lI[6495] - lIlI11li1li111i11lill local lIlI1Il1iiiiIiIi11I1l = illI1lililIl1Il11lI[44873] local iI1lIiIliIi1ll1iIli = illI1lililIl1Il11lI[60801] if iI1lIiIliIi1ll1iIli > 255 then iI1lIiIliIi1ll1iIli = I1iiI1IlilIllIIiiil[iI1lIiIliIi1ll1iIli - 256][lIlIlIII1l11lillIiill] else iI1lIiIliIi1ll1iIli = lIlIlI1lIiIlilllIiIli[iI1lIiIliIi1ll1iIli] end if lIlll111Iiiiililii1ll > 255 then lIlll111Iiiiililii1ll = I1iiI1IlilIllIIiiil[lIlll111Iiiiililii1ll - 256][lIlIlIII1l11lillIiill] else lIlll111Iiiiililii1ll = lIlIlI1lIiIlilllIiIli[lIlll111Iiiiililii1ll] end lIlIlI1lIiIlilllIiIli[lIlI1Il1iiiiIiIi11I1l] = iI1lIiIliIi1ll1iIli / lIlll111Iiiiililii1ll end IiIi1lIi1llilil11I1[37] = function(illI1lililIl1Il11lI, li1ilIII1iiI1iill11, i1lI111llIIlIlII1Il, lIlIllliiIlilIi11IiIl) local lIliIIIi1iI1Iil1l1l11 = illI1lililIl1Il11lI[6495] local lIlll111Iiiiililii1ll = illI1lililIl1Il11lI[58323] local i1ii1I1i11iI1l1il1l = illI1lililIl1Il11lI[6495] - lIlI11li1li111i11lill local iI1lIiIliIi1ll1iIli = illI1lililIl1Il11lI[60801] local lIlI1Il1iiiiIiIi11I1l = illI1lililIl1Il11lI[44873] lIlIlI1lIiIlilllIiIli[lIlI1Il1iiiiIiIi11I1l] = lIlIlI1lIiIlilllIiIli[iI1lIiIliIi1ll1iIli] end IiIi1lIi1llilil11I1[2] = function(illI1lililIl1Il11lI) local iI1lIiIliIi1ll1iIli = illI1lililIl1Il11lI[60801] local lIlI1Il1iiiiIiIi11I1l = illI1lililIl1Il11lI[44873] local lIlll111Iiiiililii1ll = illI1lililIl1Il11lI[58323] local lIliIIIi1iI1Iil1l1l11 = illI1lililIl1Il11lI[6495] local i1ii1I1i11iI1l1il1l = illI1lililIl1Il11lI[6495] - lIlI11li1li111i11lill if lIlll111Iiiiililii1ll > 255 then lIlll111Iiiiililii1ll = I1iiI1IlilIllIIiiil[lIlll111Iiiiililii1ll - 256][lIlIlIII1l11lillIiill] else lIlll111Iiiiililii1ll = lIlIlI1lIiIlilllIiIli[lIlll111Iiiiililii1ll] end lIlIlI1lIiIlilllIiIli[lIlI1Il1iiiiIiIi11I1l] = lIlIlI1lIiIlilllIiIli[iI1lIiIliIi1ll1iIli][lIlll111Iiiiililii1ll] end IiIi1lIi1llilil11I1[18] = function(illI1lililIl1Il11lI, li1ilIII1iiI1iill11) local lIlll111Iiiiililii1ll = illI1lililIl1Il11lI[58323] local iI1lIiIliIi1ll1iIli = illI1lililIl1Il11lI[60801] local i1ii1I1i11iI1l1il1l = illI1lililIl1Il11lI[6495] - lIlI11li1li111i11lill local lIliIIIi1iI1Iil1l1l11 = illI1lililIl1Il11lI[6495] local lIlI1Il1iiiiIiIi11I1l = illI1lililIl1Il11lI[44873] if iI1lIiIliIi1ll1iIli > 255 then iI1lIiIliIi1ll1iIli = I1iiI1IlilIllIIiiil[iI1lIiIliIi1ll1iIli - 256][lIlIlIII1l11lillIiill] else iI1lIiIliIi1ll1iIli = lIlIlI1lIiIlilllIiIli[iI1lIiIliIi1ll1iIli] end if lIlll111Iiiiililii1ll > 255 then lIlll111Iiiiililii1ll = I1iiI1IlilIllIIiiil[lIlll111Iiiiililii1ll - 256][lIlIlIII1l11lillIiill] else lIlll111Iiiiililii1ll = lIlIlI1lIiIlilllIiIli[lIlll111Iiiiililii1ll] end lIlIlI1lIiIlilllIiIli[lIlI1Il1iiiiIiIi11I1l] = iI1lIiIliIi1ll1iIli * lIlll111Iiiiililii1ll end IiIi1lIi1llilil11I1[0] = function(illI1lililIl1Il11lI, li1ilIII1iiI1iill11, i1lI111llIIlIlII1Il, lIlIllliiIlilIi11IiIl) local lIlll111Iiiiililii1ll = illI1lililIl1Il11lI[58323] local lIlI1Il1iiiiIiIi11I1l = illI1lililIl1Il11lI[44873] local lIliIIIi1iI1Iil1l1l11 = illI1lililIl1Il11lI[6495] local iI1lIiIliIi1ll1iIli = illI1lililIl1Il11lI[60801] local i1ii1I1i11iI1l1il1l = illI1lililIl1Il11lI[6495] - lIlI11li1li111i11lill if lIlll111Iiiiililii1ll == 254 then return iiIIiliiIilili1Il1i[10]({ [44873] = (lIlI1Il1iiiiIiIi11I1l - 174) % 256, [58323] = (iI1lIiIliIi1ll1iIli - 174) % 256, [6495] = 0 }) end if iI1lIiIliIi1ll1iIli == 1 then return true end local Ii1ill111lI1llii1Il = lIlI1Il1iiiiIiIi11I1l + iI1lIiIliIi1ll1iIli - 2 if iI1lIiIliIi1ll1iIli == 0 then Ii1ill111lI1llii1Il = lI1il1Il1ilI1l1Ilil end return true, lIlI1Il1iiiiIiIi11I1l, Ii1ill111lI1llii1Il end IiIi1lIi1llilil11I1[29] = function(illI1lililIl1Il11lI, li1ilIII1iiI1iill11, i1lI111llIIlIlII1Il, lIlIllliiIlilIi11IiIl, Illiil1l11lliiIlIIl, l1IIIIlI111ll11l11I) local iI1lIiIliIi1ll1iIli = illI1lililIl1Il11lI[60801] local i1ii1I1i11iI1l1il1l = illI1lililIl1Il11lI[6495] - lIlI11li1li111i11lill local lIlll111Iiiiililii1ll = illI1lililIl1Il11lI[58323] local lIlI1Il1iiiiIiIi11I1l = illI1lililIl1Il11lI[44873] local lIliIIIi1iI1Iil1l1l11 = illI1lililIl1Il11lI[6495] if iI1lIiIliIi1ll1iIli > 255 then iI1lIiIliIi1ll1iIli = I1iiI1IlilIllIIiiil[iI1lIiIliIi1ll1iIli - 256][lIlIlIII1l11lillIiill] else iI1lIiIliIi1ll1iIli = lIlIlI1lIiIlilllIiIli[iI1lIiIliIi1ll1iIli] end if lIlll111Iiiiililii1ll > 255 then lIlll111Iiiiililii1ll = I1iiI1IlilIllIIiiil[lIlll111Iiiiililii1ll - 256][lIlIlIII1l11lillIiill] else lIlll111Iiiiililii1ll = lIlIlI1lIiIlilllIiIli[lIlll111Iiiiililii1ll] end lIlIlI1lIiIlilllIiIli[lIlI1Il1iiiiIiIi11I1l] = iI1lIiIliIi1ll1iIli ^ lIlll111Iiiiililii1ll end IiIi1lIi1llilil11I1[36] = function(illI1lililIl1Il11lI, li1ilIII1iiI1iill11, i1lI111llIIlIlII1Il, lIlIllliiIlilIi11IiIl, Illiil1l11lliiIlIIl) local iI1lIiIliIi1ll1iIli = illI1lililIl1Il11lI[60801] local lIlI1Il1iiiiIiIi11I1l = illI1lililIl1Il11lI[44873] local lIliIIIi1iI1Iil1l1l11 = illI1lililIl1Il11lI[6495] local lIlll111Iiiiililii1ll = illI1lililIl1Il11lI[58323] local i1ii1I1i11iI1l1il1l = illI1lililIl1Il11lI[6495] - lIlI11li1li111i11lill local liI1iliiiIi11II1lIi = (lIlll111Iiiiililii1ll - 1) * 50 if iI1lIiIliIi1ll1iIli == 0 then iI1lIiIliIi1ll1iIli = lI1il1Il1ilI1l1Ilil - lIlI1Il1iiiiIiIi11I1l end for iIIiIl11iIl1IIl1i1I = 1, iI1lIiIliIi1ll1iIli do lIlIlI1lIiIlilllIiIli[lIlI1Il1iiiiIiIi11I1l][liI1iliiiIi11II1lIi + iIIiIl11iIl1IIl1i1I] = lIlIlI1lIiIlilllIiIli[lIlI1Il1iiiiIiIi11I1l + iIIiIl11iIl1IIl1i1I] end end IiIi1lIi1llilil11I1[28] = function(illI1lililIl1Il11lI, li1ilIII1iiI1iill11, i1lI111llIIlIlII1Il) local iI1lIiIliIi1ll1iIli = illI1lililIl1Il11lI[60801] local lIlI1Il1iiiiIiIi11I1l = illI1lililIl1Il11lI[44873] local lIlll111Iiiiililii1ll = illI1lililIl1Il11lI[58323] local lIliIIIi1iI1Iil1l1l11 = illI1lililIl1Il11lI[6495] local i1ii1I1i11iI1l1il1l = illI1lililIl1Il11lI[6495] - lIlI11li1li111i11lill local Ill1IIl1l1iIiIlIl1l, Ii1ill111lI1llii1Il if iI1lIiIliIi1ll1iIli ~= 1 then if iI1lIiIliIi1ll1iIli ~= 0 then Ii1ill111lI1llii1Il = lIlI1Il1iiiiIiIi11I1l + iI1lIiIliIi1ll1iIli - 1 else Ii1ill111lI1llii1Il = lI1il1Il1ilI1l1Ilil end Ii1ill111lI1llii1Il, Ill1IIl1l1iIiIlIl1l = iIii1liIIIIlilIlliI(lIlIlI1lIiIlilllIiIli[lIlI1Il1iiiiIiIi11I1l](lIliliiiIi1111lIlii1I(lIlIlI1lIiIlilllIiIli, lIlI1Il1iiiiIiIi11I1l + 1, Ii1ill111lI1llii1Il))) else Ii1ill111lI1llii1Il, Ill1IIl1l1iIiIlIl1l = iIii1liIIIIlilIlliI(lIlIlI1lIiIlilllIiIli[lIlI1Il1iiiiIiIi11I1l]()) end lIlIlI1lIiIlilllIiIli = Ill1IIl1l1iIiIlIl1l return true, 1, Ii1ill111lI1llii1Il end IiIi1lIi1llilil11I1[5] = function(illI1lililIl1Il11lI, li1ilIII1iiI1iill11, i1lI111llIIlIlII1Il, lIlIllliiIlilIi11IiIl) local i1ii1I1i11iI1l1il1l = illI1lililIl1Il11lI[6495] - lIlI11li1li111i11lill local lIliIIIi1iI1Iil1l1l11 = illI1lililIl1Il11lI[6495] local lIlll111Iiiiililii1ll = illI1lililIl1Il11lI[58323] local iI1lIiIliIi1ll1iIli = illI1lililIl1Il11lI[60801] local lIlI1Il1iiiiIiIi11I1l = illI1lililIl1Il11lI[44873] lIlIlI1lIiIlilllIiIli[lIlI1Il1iiiiIiIi11I1l] = I1iiI1IlilIllIIiiil[lIliIIIi1iI1Iil1l1l11][lIlIlIII1l11lillIiill] end iiIIiliiIilili1Il1i = { IiIi1lIi1llilil11I1[34], IiIi1lIi1llilil11I1[32], IiIi1lIi1llilil11I1[36], IiIi1lIi1llilil11I1[20], IiIi1lIi1llilil11I1[8], IiIi1lIi1llilil11I1[0], IiIi1lIi1llilil11I1[27], IiIi1lIi1llilil11I1[37], IiIi1lIi1llilil11I1[30], IiIi1lIi1llilil11I1[4], IiIi1lIi1llilil11I1[9], IiIi1lIi1llilil11I1[15], IiIi1lIi1llilil11I1[21], IiIi1lIi1llilil11I1[2], IiIi1lIi1llilil11I1[29], IiIi1lIi1llilil11I1[17], IiIi1lIi1llilil11I1[23], IiIi1lIi1llilil11I1[24], IiIi1lIi1llilil11I1[10], IiIi1lIi1llilil11I1[3], IiIi1lIi1llilil11I1[11], IiIi1lIi1llilil11I1[6], IiIi1lIi1llilil11I1[13], IiIi1lIi1llilil11I1[1], IiIi1lIi1llilil11I1[25], IiIi1lIi1llilil11I1[12], IiIi1lIi1llilil11I1[16], IiIi1lIi1llilil11I1[5], IiIi1lIi1llilil11I1[19], IiIi1lIi1llilil11I1[31], IiIi1lIi1llilil11I1[7], IiIi1lIi1llilil11I1[33], IiIi1lIi1llilil11I1[35], IiIi1lIi1llilil11I1[26], IiIi1lIi1llilil11I1[28], IiIi1lIi1llilil11I1[14], IiIi1lIi1llilil11I1[22], IiIi1lIi1llilil11I1[18] } local function lI1Iiliil1i1liiIll1() while true do local illI1lililIl1Il11lI = IIllII1iilI11iliiiI[II1iIlIl1lII1IlliIi] II1iIlIl1lII1IlliIi = II1iIlIl1lII1IlliIi + 1 local lIlIlllliII1Ill1I11li, i1IIlilill1iI1il1Ii, iIiiIllIIlili11Ili1 = iiIIiliiIilili1Il1i[illI1lililIl1Il11lI[105359] + 1](illI1lililIl1Il11lI) if lIlIlllliII1Ill1I11li then return i1IIlilill1iI1il1Ii, iIiiIllIIlili11Ili1 end end end local il1I1ll1IiII1lI1ill, i1IIlilill1iI1il1Ii, iIiiIllIIlili11Ili1 = iliiI1iIIiI1iI1IIil(lI1Iiliil1i1liiIll1) if il1I1ll1IiII1lI1ill then if i1IIlilill1iI1il1Ii then return lIliliiiIi1111lIlii1I(lIlIlI1lIiIlilllIiIli, i1IIlilill1iI1il1Ii, iIiiIllIIlili11Ili1) end else local IlIi1IliilI1lIlillI = iI1Iii11Ii11lii1I11("Luraph Script:" .. (IilIl11iIlI1lIIlllI[II1iIlIl1lII1IlliIi - 1] or "") .. ": " .. liIlII1llilIllIilil(i1IIlilill1iI1il1Ii), "[^:]+:%d*: ", function(I1Ii1Iii11iIiil1l1l) if not li1lilllllli1il1lI1(I1Ii1Iii11iIiil1l1l, "Luraph Script:%d") then return "" end end) ilIllii1i1IiiIil1ll(IlIi1IliilI1lIlillI, 0) end end lIliillll1I111IIl1I1I(liI1IIliIl1lIi1l1ii, lIll1IlIIIIil1iii1I1l) return liI1IIliIl1lIi1l1ii end local IiiiIlii11IiiI1lIll = lIl1i11ililIliiiIllii() return il1ii1ilii11l1i1l1I(IiiiIlii11IiiI1lIll, lIll1IlIIIIil1iii1I1l)() end IlIl1IIlI1ilIllilli("LPH|ll1i1iiiiII1llIllll())